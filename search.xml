<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>优秀毕业生评选材料展示</title>
      <link href="/21.03.27/"/>
      <url>/21.03.27/</url>
      
        <content type="html"><![CDATA[<h1 id="1-吕云哲"><a href="#1-吕云哲" class="headerlink" title="1.吕云哲"></a>1.吕云哲</h1><p>获得的校级及以上荣誉：<br>2016-2017学年 新生奖学金 新生校长奖 校级<br>2019-2020学年 南京大学优秀共青团员 共青团南京大学委员会 校级<br>2017-2018学年 基础学科拔尖学生培养计划专项奖学金二等奖 南京大学 校级<br>2018-2019学年 基础学科拔尖学生培养计划专项奖学金二等奖 南京大学 校级<br>2018-2019学年 江苏省第十届大学生知识竞赛（理工科组）优秀奖 江苏省高等教育学会 省级<br>2017-2018学年 全国大学生英语竞赛三等奖 高等学校大学外语教学指导委员会 国家级<br>参与的科研创新项目：<br>创新项目“基于机器学习的人流检测与分析”，于2020年3月结项，评定结果为优秀<br>参与的社会实践项目：<br>“南星梦想计划”寒假期间回访中学母校计划<br>“家传至谱”家谱文化传承调查活动<br>“革命老区发展现状调查”主题社会实践活动<br>担任的职务：<br>2017年 班级宣传委员<br>2018年至今 班级心理委员<br>其他：<br>于2020年10月成为光荣的共产党员</p><h1 id="2-丁保荣"><a href="#2-丁保荣" class="headerlink" title="2.丁保荣"></a>2.丁保荣</h1><p>我在大学期间，积极参加各类志愿活动：大一学年参加了自主招生和综合评价的志愿者，大二暑假在招办协助录取新生的工作。我也参加了各类竞赛，并获得了一些奖项，包括CCF优秀大学生奖、CCPC银牌、数学建模美赛H奖等。我在学业方面的成绩也使我获得了拔尖一等奖学金，也参与到了一个创新项目中，并且被评为省级项目。</p><h1 id="3-张天昀"><a href="#3-张天昀" class="headerlink" title="3.张天昀"></a>3.张天昀</h1><p>曾担任计算机系青年志愿者协会秘书部部长，处理志愿者时长认定与录入工作、负责南大和园小学生电脑教学活动；现担任计算机系2017级6班宣传委员、计算机系学工助理、2019级《问题求解》助教工作，参与19、20级班级活动经验分享；曾获得江苏省大学生程序设计竞赛特等奖、中国大学生程序设计竞赛（哈尔滨）银奖、CCF中国大学生系统与程序设计竞赛金奖等奖项，获得过南京大学优秀共青团员、 南京大学优秀学生、江苏省三好学生、南京大学栋梁特等奖学金等荣誉</p><h1 id="4-刘恩萌"><a href="#4-刘恩萌" class="headerlink" title="4.刘恩萌"></a>4.刘恩萌</h1><ol><li>前7个学期综合GPA4.603，排名4/31</li><li>2020.11 获得拔尖计划奖学金一等奖</li><li>2020.7-10 在苏州微软进行软件开发工程师实习，表现优异，最终拿到了strong conversion offer<s>（虽然拒了）</s></li><li>2019.9-2021.1 担任机房辅导岗职位，协助维护同学们的自习环境</li><li>2019.11 获得拔尖计划奖学金二等奖</li><li>2019.4 在美国大学生数学建模竞赛中获得团体H奖，全程参与建模、写代码、论文撰写论文、排版等阶段</li><li>2019.2 参加拔尖计划香港学术交流活动，并在香港科技大学-南京大学计算机科学学术竞赛中获得团体第三名</li><li>2018.11 获得拔尖计划奖学金二等奖<br>================分割线以下内容我随便写写的====================</li><li>2018.6 和y*y, h*k共同创立学习群（现名“我们都有光明的未来”），促进同学们互帮互助<s>一起内卷</s>，为班级营造了浓厚的学习<s>和约饭</s>气氛</li><li>2018.7 建立<a href="https://mengzelev.github.io/" target="_blank" rel="noopener">个人博客</a>，分享学习笔记、经验与心得</li><li>（虽然这是第8个学期的事情了）2021.3 接受多伦多大学研究型硕士的offer，<s>从此走上漫漫搬砖路</s></li></ol><h1 id="5-姜勇刚"><a href="#5-姜勇刚" class="headerlink" title="5.姜勇刚"></a>5.姜勇刚</h1><p>作为南京大学的一名共青团员，热爱祖国，乐于助人，积极拥护中国共产党。大三大四两次担任人工智能学院算法设计与数据结构专业课助教。<br>成绩优异，大一时经过选拔进入计算机科学与技术系拔尖班进行学习，大学三年专业学分绩位列拔尖班第一，连续两年以总评分第一的成绩获得拔尖计划奖学金一等奖、特等奖，专业实力突出。<br>竞赛成果斐然，大一大二期间参与算法编程竞赛系列赛事，先后获得南京大学程序设计竞赛金牌本科生第一、ICPC国际大学生程序设计竞赛江苏省省赛特等奖、邀请赛银牌、亚洲区域赛银牌，CCPC中国大学生程序设计竞赛金牌等奖项。<br>在大三下期间参与加州大学伯克利分校（UCB）交换项目，学习成果极为优异，交换期间所有课程均获得A+，满学分绩(4.0/4.0)。<br>于大三起全身心投入科研活动中，在南京大学计算机系理论组进行过长时间的科研工作（直到现在），一些成果计划于不久后进行发表。<br>校园文化方面，热爱体育，积极参与校级、院级运动会，获得的奖项包括但不限于：校运会4*400团体项目冠军，软件学院运动会1500个人单项冠军。大一时积极参与社团活动，参与软件学院辩论队，担任南京大学英语俱乐部理事做出多项贡献，工作认真，表现优异。参与计算机系学生会，负责新生晚会等多项事宜。社会实践方面，大一时参与“南星梦想计划”校级社会实践活动，担任组长并获得优秀团队称号。大二时参与院级社会实践，选题“补习调研梦”，在组内做出突出贡献。</p><h1 id="6-裴一凡"><a href="#6-裴一凡" class="headerlink" title="6.裴一凡"></a>6.裴一凡</h1><p>担任班长，日常打杂（划掉），参与组织班级活动40多场。获得过ACM-ICPC区域赛金牌、CCPC金牌、CCF优秀大学生奖、校级优秀学生、省级优秀学生干部等荣誉。担任问题求解（一）、问题求解（二）、离散数学课程助教，以及朋辈导师。同时积极参与各种活动，志愿时长127小时。</p><h1 id="7-郑奘巍"><a href="#7-郑奘巍" class="headerlink" title="7.郑奘巍"></a>7.郑奘巍</h1><p>作为 17 级 6 班的团支书，认真履行团支书职责，协助开展本班四十余次活动，疫情期间尽职测温，获得优秀共青团干部称号。带领班级获取南京大学团支部建设示范点、2018 年度五四红旗班和2020年度省级先进班集体称号。</p><p>积极参加科研。在南京大学黎铭老师的指导下进行了半年的科研任务，又在伯克利大学 Alberto Sangiovanni-Vincentelli 教授实验室中进行为期一年的海外科研实习。获得郑钢海外学习奖学金，科研期间参与并完成了包括新冠胸片检测，雷达自动驾驶相关的项目，获得了导师的认可。其中，一篇论文以共同一作身份在 CVPR 2021（CCF A类）会议上发表。</p><p>在学习上积极进取，成绩优异，担任算法课助教。积极参加各项竞赛，在香港访学期间竞赛中获得第一名，并参加了谷歌第一届机器学习冬令营等项目。获得校级优秀学生称号和各项奖学金。</p><p>积极参加志愿活动，总时长 124 小时，并获得 2019 级优秀朋辈导师称号和南京大学优秀志愿者。</p><h1 id="8-毛一鸣"><a href="#8-毛一鸣" class="headerlink" title="8.毛一鸣"></a>8.毛一鸣</h1><p>实习方面，我曾在微软和腾讯公司进行实习，得到了公司的认可与转正机会，并获得了谷歌公司的实习资格（后由于疫情影响变为线上项目），拥有丰富的实习工作经验</p><p>科研方面，我在计算机系统领域排名全世界第一的美国伊利诺伊大学香槟分校的SysNet组Tianyin Xu教授的指导下进行了远程科研，发现了著名分布式系统Hadoop中存在的不一致性问题，并向Hadoop团队提交了官方报告</p><p>学生工作方面，我曾担任计算机系团学会外联部部长，参与组织了院系联谊活动以及有超过4000名观众的系庆晚会，并先后获得南京大学优秀学生干部、优秀学生干部标兵和南京大学五四评优优秀共青团员荣誉</p><p>科创竞赛方面，我参加了创新项目“基于机器学习的民宿投资策略研究——以南京市为例”并在团队中担任技术骨干，该项目被评为国家级创新项目并在结题中评为优秀；我还曾获得南京大学第一届腾讯微软俱乐部Hackathon大赛二等奖、NJU-Vivo-Hackathon入围决赛、第16届程序设计大赛普及组金奖等奖项</p><p>社会实践方面，我参加了“复兴之路”社会实践项目，该项目入选“团中央千校千项最具影响好项目”，并被评为“三下乡”社会实践活动优秀团队</p><p>校园文化活动方面，我连续三年参与系迎新晚会的演出，担任过主持人、节目演唱者等角色；在大一时参加校运会并在3000米项目赢得铜牌</p><p>志愿服务方面，我曾参加“南星梦想计划”、新生迎接、迎新晚会志愿者等丰富志愿活动</p><p>未来去向方面，目前我已经获得苏黎世联邦理工、加州大学圣地亚哥分校等名校的录取，即将出国进行进一步的深造</p><h1 id="9-肖江"><a href="#9-肖江" class="headerlink" title="9.肖江"></a>9.肖江</h1><p>加入计算机科学与技术拔尖计划，勤奋学习，学分绩名列前茅，积极参与学科竞赛，在江苏省大学生编程能力大赛上组队获得一等奖<br>积极参与志愿活动，担任计算机系青协活动部部长，和其余部员一同组织的和园小学生电脑培训活动屡次获奖<br>关注业界发展动向，进入企业实习，参与企业活动，在腾讯，字节，微软均有实习经历，在字节跳动夏令营中组队获得工程赛道第一</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>好物分享</title>
      <link href="/20.09.21/"/>
      <url>/20.09.21/</url>
      
        <content type="html"><![CDATA[<h2 id="乐事-山药脆片"><a href="#乐事-山药脆片" class="headerlink" title="乐事 山药脆片"></a>乐事 山药脆片</h2><ul><li>理由：好吃，从此觉得薯片弱爆了</li><li>价格：不记得教超的价格了，一包5r左右吧，淘宝上一箱一买可能会更便宜。</li><li>链接：教超就有。</li></ul><h2 id="保暖袜套"><a href="#保暖袜套" class="headerlink" title="保暖袜套"></a>保暖袜套</h2><ul><li>理由：妈妈再也不用担心冬天在宿舍jio冷；有对象的同学也可以考虑当礼物？毕竟手套围巾都太烂大街了。</li><li>价格：我买的超厚款是30r左右一双</li><li>链接：我这只有女款链接，小姐姐可以私戳我（注：萌）要。淘宝也能搜到男款的。</li></ul><h2 id="半指手套"><a href="#半指手套" class="headerlink" title="半指手套"></a>半指手套</h2><ul><li>理由：便宜保暖，也不影响打字和玩手机。冬天手脚冰凉人士必备，也适合送礼。</li><li>价格：19.9r</li><li>链接：6.0幅治内容€oxnOcfc1vdn€到τao寶或點击链街 <a href="https://m.tb.cn/h.VBllyry?sm=ec46b3" target="_blank" rel="noopener">https://m.tb.cn/h.VBllyry?sm=ec46b3</a> 至流览器【秋冬毛线手套女男羊绒羊毛貂绒加厚保暖半指露指学生写字开车吃鸡】</li></ul><h2 id="近江蔓莎-润唇膏"><a href="#近江蔓莎-润唇膏" class="headerlink" title="近江蔓莎 润唇膏"></a>近江蔓莎 润唇膏</h2><ul><li>理由：很浓的豆奶味，喜欢豆奶的旁友一定不能错过ww</li><li>价格：34r/支，买二送一</li><li>链接：9fu置内容₤1lFncfQ80ON₤打開τao寶或掂击炼接 <a href="https://m.tb.cn/h.VBuMR9f" target="_blank" rel="noopener">https://m.tb.cn/h.VBuMR9f</a> 至浏.览览.器【现货买二送一日本原装OMI近江蔓莎高保湿润唇膏豆乳味正品送樱彩】</li></ul><h2 id="近江兄弟-身体防晒霜"><a href="#近江兄弟-身体防晒霜" class="headerlink" title="近江兄弟 身体防晒霜"></a>近江兄弟 身体防晒霜</h2><ul><li>理由：便宜好用，蓝色款有清凉感。注意只能用于【身体】皮肤，脸上皮肤比较精贵需要用好一点的防晒霜。总之，防晒工作真的很重要！</li><li>价格：淘宝代购15-20+不等/瓶。</li><li>链接：淘宝随便搜一下代购的吧。</li></ul><h2 id="撒隆巴斯"><a href="#撒隆巴斯" class="headerlink" title="撒隆巴斯"></a>撒隆巴斯</h2><ul><li>理由：有涂抹的贴的两种。缓解肌肉疲劳酸痛效果拔群，强推。</li><li>价格：多种规格，有日本进口的也有国产的，难以定论。</li><li>链接：阿里健康有日本进口的。</li></ul><h2 id="3M-超柔软耳塞-312-1250"><a href="#3M-超柔软耳塞-312-1250" class="headerlink" title="3M 超柔软耳塞 312-1250"></a>3M 超柔软耳塞 312-1250</h2><p>耳塞，慢回弹，柔软，价格实惠，尤其适合睡觉佩戴.</p><p>如果你的室友会打呼噜, 这款耳塞绝对可以帮到你</p><p><img src="https://multimedia.3m.com/mws/media/531707P/e-a-rsoft-yellow-neons-regular-uncorded-312-1250.jpg" alt="image"></p><blockquote><p>降噪能力: NNR 33dB, SNR 36dB</p><p>价格: 26.80￥ / 1盒6副</p><p>购买链接: <a href="https://item.jd.com/17799796637.html" target="_blank" rel="noopener">3M官方旗舰店</a></p><p>注意事项: 耳塞是消耗品, 定期更换以保证耳道健康; 不建议长期佩戴</p><p>PS: 这个好像也不算是最贵最好的耳塞, 只是说我有在用, 觉得挺好就推荐一下</p></blockquote><h2 id="无印良品（MUJI）树脂携带型订书机"><a href="#无印良品（MUJI）树脂携带型订书机" class="headerlink" title="无印良品（MUJI）树脂携带型订书机"></a>无印良品（MUJI）树脂携带型订书机</h2><p>随身携带的小小订书机, 与多数橡皮擦大小类似, 极限可订8~12张普通A4, 放进铅笔盒完全没有压力</p><table><thead><tr><th>折叠</th><th>展开</th></tr></thead><tbody><tr><td><img src="https://img.muji.com.cn/img/item/4934761799070_02_400.jpg?0#h" alt="image"></td><td><img src="https://img.muji.com.cn/img/item/4934761799070_03_400.jpg?0#h" alt="image"></td></tr></tbody></table><blockquote><p>三维: 65mm <em> 20mm </em> 14mm</p><p>价格: 42￥/1只, <del>真TMD贵</del></p><p>购买链接：<a href="https://item.jd.com/28335972149.html" target="_blank" rel="noopener">无印良品MUJI官方旗舰店</a></p><p>注意事项: 使用的订书钉是: 10号订书钉, 宽9mm, 针长4mm, 务必注意型号, 比一般的订书针稍小</p></blockquote><h2 id="硬盘盒"><a href="#硬盘盒" class="headerlink" title="硬盘盒"></a>硬盘盒</h2><p>如果你的电脑是17年左右买的, 原装的固态一般是128GB或256GB, 现在看来已经相当小了, 一般来说会换嘛. 另外机械硬盘也有可能打算换成2.5”的固态硬盘</p><p>更换之后, 换下来的盘就会闲置, 这个时候就轮到硬盘盒出场了</p><ul><li>硬盘盒是什么: 一般是一个比硬盘本身稍大的盒子, 里面有一块PCB, 把硬盘使用的M.2接口或者SATA接口转换成USB接口, 较为高端的支持雷电</li><li>能做什么<ul><li>从2.5”硬盘获得移动硬盘: 能将闲置的2.5”硬盘转换为移动硬盘</li><li>从固态硬盘获得高速U盘: 因为M.2 2280的固态尺寸不算大, 完全可以当作U盘, 写入读出都是固态硬盘的超高速度, 吊打你能买到的几乎全部U盘, 容量也相当可以</li><li>处理紧急情况: 如果你的笔记本突然坏掉, 可以拆出硬盘, 放入硬盘盒, 先使用里面的系统和文件</li></ul></li><li>怎么选购<ul><li>2.5”硬盘盒: USB3.0就足够了, 不要贪便宜, 尤其是机械硬盘对供电质量非常敏感, 垃圾的硬盘盒会轻松干爆你拥有的硬盘; 此外, 注意厚度, 2.5”硬盘有7mm, 9mm, 15mm的厚度规格, 如果你的硬盘超厚, 选购硬盘盒时也要注意</li><li>M.2硬盘盒: 一定要注意硬盘盒的协议类型, 是NVME还是SATA, 这两种协议的硬盘盒<strong>硬件级</strong>不兼容, 你的固态可能会插不进去</li></ul></li><li>为什么不放链接: 我也不知道哪家比较好, 可以知乎一下</li></ul><h2 id="网站-when2meet"><a href="#网站-when2meet" class="headerlink" title="网站 when2meet"></a>网站 when2meet</h2><p>推荐一个网站：<a href="https://www.when2meet.com/" target="_blank" rel="noopener">www.when2meet.com</a>，解决会议时间安排<br>无需登录，只用填写相应信息后 create event</p><p><img src="/images/20.09.21-1.png" alt></p><p>生成一个 Url （如<a href="https://www.when2meet.com/?9848712-GN2b4" target="_blank" rel="noopener">https://www.when2meet.com/?9848712-GN2b4</a>），每个人选择自己合适的时间后，右侧按颜色深浅显示可以安排的时间 </p><p><img src="/images/20.09.21-2.png" alt></p><h2 id="明基-台灯"><a href="#明基-台灯" class="headerlink" title="明基 台灯"></a>明基 台灯</h2><p>明基的led台灯，很亮很贵（</p><p><a href="https://item.jd.com/7352490.html" target="_blank" rel="noopener">https://item.jd.com/7352490.html</a></p><h2 id="软件-everything"><a href="#软件-everything" class="headerlink" title="软件 everything"></a>软件 everything</h2><p>推荐Windows上的软件，就叫everything，可以实现名称索引查找文件的功能，速度挺快，很阳间</p><h2 id="晰雅-眼镜擦拭湿巾"><a href="#晰雅-眼镜擦拭湿巾" class="headerlink" title="晰雅 眼镜擦拭湿巾"></a>晰雅 眼镜擦拭湿巾</h2><p>价格：一盒包装（30包）10块钱左右。</p><p>用于擦除眼镜上各种灰尘与污痕，比一般的眼镜布或水洗效果要好，且方便携带。<img src="/images/20.09.21-3.jpg" alt></p><h2 id="榄菊-蚊香液"><a href="#榄菊-蚊香液" class="headerlink" title="榄菊 蚊香液"></a>榄菊 蚊香液</h2><p>价格：20？</p><p>用了之后再也不会夏天被蚊子叮醒了（虽然现在已经是秋天</p><h2 id="宜家-密封袋"><a href="#宜家-密封袋" class="headerlink" title="宜家 密封袋"></a>宜家 密封袋</h2><p><a href="https://www.ikea.cn/cn/zh/p/istad-ai-si-ta-mi-feng-dai-huang-se-bai-se-30461014/" target="_blank" rel="noopener">IKEA 艾斯塔 密封袋</a></p><p>可以重复使用，日常装吃的，还能用来打包行李</p><h2 id="usmile-电动牙刷"><a href="#usmile-电动牙刷" class="headerlink" title="usmile 电动牙刷"></a>usmile 电动牙刷</h2><p>理由：半年充一次电 颜色好看（老颜狗了 虽然是情侣款但是单身狗买一支也能用（<br>价格：6月份在京东官方旗舰店200买到的一支 但是我现在去看好像因为一部剧同款莫名变贵了 想买可以再等等<br>链接：<a href="https://item.jd.com/100000652867.html" target="_blank" rel="noopener">https://item.jd.com/100000652867.html</a></p><h2 id="雅漾-舒缓保湿乳"><a href="#雅漾-舒缓保湿乳" class="headerlink" title="雅漾 舒缓保湿乳"></a>雅漾 舒缓保湿乳</h2><p>理由：换季的时候皮肤特别敏感起皮泛红，一般的护肤产品多少会有些刺激，但是这个用起来就非常温和细腻</p><p>价格：135</p><h2 id="植村秀-眉笔"><a href="#植村秀-眉笔" class="headerlink" title="植村秀 眉笔"></a>植村秀 眉笔</h2><p>能勾画出清晰的毛流感，没有眉毛星人可以大胆入手的神仙眉笔！</p><h2 id="得力-订书机"><a href="#得力-订书机" class="headerlink" title="得力 订书机"></a>得力 订书机</h2><p>比无印良品那个便宜好多，也可以完全合上</p><p><img src="/images/20.09.21-4.png" alt></p>]]></content>
      
      
      
        <tags>
            
            <tag> 班会&amp;团生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>寒假宅家记录</title>
      <link href="/20.03.11/"/>
      <url>/20.03.11/</url>
      
        <content type="html"><![CDATA[<blockquote><p>注：大致按照提交顺序<br>注：右边的 Catalog 可以滚动</p></blockquote><h1 id="1-Minecraft"><a href="#1-Minecraft" class="headerlink" title="1 Minecraft"></a>1 Minecraft</h1><p>在寒假里，XNR, ZTY, ZZW, LYZ 一起搭建了教育软件《Minecraft》的线上服务器，寓教于乐。</p><ul><li>实践学习现代化集中农业生产知识：<br>  <img src="/images/20.03.11/mc-farm.png" alt="farm"></li><li>在斯卡波罗集市中学习微观经济学知识：<br>  <img src="/images/20.03.11/mc-fair.png" alt="fair"></li><li>复习数字电路知识，建设自动烧炼炉：<br>  <img src="/images/20.03.11/mc-forge.png" alt="forge"></li><li>搭建小别墅，了解建筑知识，陶冶情操：<br>  <img src="/images/20.03.11/mc-garden.png" alt="garden"></li><li>动手复刻古代建筑，回味传统文化（By ZZW）：<br>  <img src="/images/20.03.11/mc-zzw.png" alt="zzw"></li></ul><h1 id="2-门户即推荐，搜索即服务"><a href="#2-门户即推荐，搜索即服务" class="headerlink" title="2 门户即推荐，搜索即服务"></a>2 门户即推荐，搜索即服务</h1><p>整理各网站的搜索链接，辅以 Alfred 支持<br><a href="https://github.com/zhengzangw/Portal2Search" target="_blank" rel="noopener">Portal2Search</a></p><h1 id="3-Live2D-Displayer"><a href="#3-Live2D-Displayer" class="headerlink" title="3 Live2D_Displayer"></a>3 Live2D_Displayer</h1><ul><li>本人在家，无聊的情况下，魔改了Live2D官方提供的Sample，写出了这个项目</li><li>可以把动态制片人放在桌面上</li><li>PS：仅支持windows，欢迎进行平台移植</li><li>网址：<a href="https://github.com/murcherful/Live2D_Displyer" target="_blank" rel="noopener">https://github.com/murcherful/Live2D_Displyer</a>（点一下，玩一年）<del>等等，我TM又打错单词了，淦</del></li></ul><h2 id="什么是Live2D"><a href="#什么是Live2D" class="headerlink" title="什么是Live2D"></a>什么是Live2D</h2><ul><li>一种可以让制片人动起来的技术，让2D有3D内味，广泛用于：<ul><li>虚拟主播：加上面部识别，然后用一个Live2D模型，就可以出道</li><li>游戏立绘：比如碧蓝航线等抽卡游戏，或者剧情向的游戏</li><li>桌面背景：目前较好的就是Live2DViewerEx，某蒸汽软件有，20软妹币，有钱的同学可以使用钞能力获取极致体验，另外模型有的收费。</li><li>详情去官网，我就不讲了</li></ul></li></ul><h2 id="为什么要搞"><a href="#为什么要搞" class="headerlink" title="为什么要搞"></a>为什么要搞</h2><ul><li>很简单的理由，<del>没有钱</del>，<del>为了纸片人</del>，为了进一步提升自己读代码动手能力</li><li>目前来说有关于技术方面的问题可以问我（仅限本项目），<del>我不一定会</del></li><li>不过最后搞下来，发现改的地方不多，最主要的其实还是理解代码，<del>淦，又摸了一星期</del></li></ul><h2 id="项目相关"><a href="#项目相关" class="headerlink" title="项目相关"></a>项目相关</h2><ul><li>首先，欢迎一起搞，这个程序还很不完善</li><li>如果只想体验一番，非常简单：<ul><li>打开项目主页</li><li><del>点星</del></li><li>复制链接</li><li>git clone</li><li>打开<code>exe</code></li></ul></li><li>如果想搞代码，请按主页上的README来</li></ul><h1 id="4-寒假画的几幅见不得人的画"><a href="#4-寒假画的几幅见不得人的画" class="headerlink" title="4 寒假画的几幅见不得人的画"></a>4 寒假画的几幅见不得人的画</h1><p><img src="/images/20.03.11/4-1.jpg" alt><br><img src="/images/20.03.11/4-2.jpg" alt><br><img src="/images/20.03.11/4-3.png" alt></p><h1 id="5-公园里的黑天鹅和崽崽们"><a href="#5-公园里的黑天鹅和崽崽们" class="headerlink" title="5 公园里的黑天鹅和崽崽们"></a>5 公园里的黑天鹅和崽崽们</h1><p><img src="/images/20.03.11/5.jpg" width="400"></p><h1 id="6-益智题目"><a href="#6-益智题目" class="headerlink" title="6 益智题目"></a>6 益智题目</h1><p>相信大家都是清华北大<br><img src="/images/20.03.11/6.jpg" width="300"></p><h1 id="7-宅家的枯燥料理"><a href="#7-宅家的枯燥料理" class="headerlink" title="7 宅家的枯燥料理"></a>7 宅家的枯燥料理</h1><p><img src="/images/20.03.11/7.jpg" alt></p><h1 id="8-二刷-Matilda"><a href="#8-二刷-Matilda" class="headerlink" title="8 二刷 Matilda"></a>8 二刷 Matilda</h1><p><img src="/images/20.03.11/8.jpeg" alt></p><h1 id="9-校园风景"><a href="#9-校园风景" class="headerlink" title="9 校园风景"></a>9 校园风景</h1><p><img src="/images/20.03.11/9-1.jpg" alt><br><img src="/images/20.03.11/9-2.jpg" alt></p><h1 id="10-老家的田"><a href="#10-老家的田" class="headerlink" title="10 老家的田"></a>10 老家的田</h1><p>后面的山很漂亮<br><img src="/images/20.03.11/10.jpg" alt></p><h1 id="11《我是猫》"><a href="#11《我是猫》" class="headerlink" title="11《我是猫》"></a>11《我是猫》</h1><p>分享寒假读过的一本书吧，日本国民大作家 夏目漱石的《我是猫》</p><h1 id="12-电影推荐"><a href="#12-电影推荐" class="headerlink" title="12 电影推荐"></a>12 电影推荐</h1><p>寒假刷了一些IMDb高分电影，推几部我喜欢的<em>黑白</em>电影：</p><ul><li>《七武士》(<a href="https://movie.douban.com/subject/1295399/" target="_blank" rel="noopener">https://movie.douban.com/subject/1295399/</a>)<ul><li>黑白片能拍得如此精彩</li><li>Happy Ending？</li></ul></li><li>《生活多美好》 (<a href="https://movie.douban.com/subject/1293749/" target="_blank" rel="noopener">https://movie.douban.com/subject/1293749/</a>)<ul><li>电影版《圣诞颂歌》 </li><li>结局的两种理解（the angel, or friends）</li></ul></li><li>《十二怒汉》 (<a href="https://movie.douban.com/subject/1293182/" target="_blank" rel="noopener">https://movie.douban.com/subject/1293182/</a>)<ul><li>最简单的场景 </li><li>最纯粹的表演艺术</li><li>美国精神</li></ul></li><li>《辛德勒的名单》(<a href="https://movie.douban.com/subject/1295124/" target="_blank" rel="noopener">https://movie.douban.com/subject/1295124/</a>)<ul><li>现代黑白片</li><li>无可挑剔的演技</li><li>（类似主题作品：《拉贝日记》、《钢琴师》，然而后两者在电影艺术水平上低得多）</li></ul></li></ul><p>在爱奇艺或者腾讯视频都可以观看。</p><h1 id="13《浴缸里的惊叹》"><a href="#13《浴缸里的惊叹》" class="headerlink" title="13《浴缸里的惊叹》"></a>13《浴缸里的惊叹》</h1><p>给大家推荐一本我寒假里读过的挺不错的课外读物——《浴缸里的惊叹》（作者：顾森）。里面有许多有意思的逻辑趣题，对于解决问题很有启发，而且表达轻松易懂。</p><p><img src="/images/20.03.11/13.jpg" alt></p><h1 id="14-OBS不完全使用指北"><a href="#14-OBS不完全使用指北" class="headerlink" title="14 OBS不完全使用指北"></a>14 OBS不完全使用指北</h1><h2 id="OBS的安装"><a href="#OBS的安装" class="headerlink" title="OBS的安装"></a>OBS的安装</h2><p>为了更好的学习（<del>成为虚拟偶像火速出道</del>），我们需要对屏幕的画面进行录制，此时OBS（Open Broadcast Software）就是一款非常不错的应用。</p><ul><li>在安装前，保证系统的显卡驱动为最新。</li><li>项目官网：<a href="https://obsproject.com" target="_blank" rel="noopener">OBS Project</a>，直接下载对应平台的安装包即可。</li><li>Windows平台需要VC++运行时环境</li><li>Linux平台可以通过<code>apt + ppa</code>（Debian系）或<code>pacman</code>（Arch系）直接安装，需要安装依赖<code>ffmpeg</code></li><li>macOS平台如果需要录制声音，需要手动处理音频回环，推荐安装iShowU audio capture<ul><li>在<a href="https://support.shinywhitebox.com/hc/en-us/articles/204161459-Installing-iShowU-Audio-Capture-Mojave-and-earlier-" target="_blank" rel="noopener">shinywhitebox</a>处下载插件</li><li>安装并允许加载对应的内核扩展</li><li>在“音频MIDI设置”中添加多输出设备，勾选你想要的监听设备和iShowU audio capture</li><li>在OBS中的外部音源添加iShowU audio capture</li></ul></li></ul><p><img src="/images/20.03.11/14-midi.png" alt="macOS MIDI 设置"></p><h2 id="OBS的画面设置"><a href="#OBS的画面设置" class="headerlink" title="OBS的画面设置"></a>OBS的画面设置</h2><p><img src="/images/20.03.11/14-obs.png" alt="OBS"></p><p>在工具栏来源中可以添加画面来源：</p><ul><li>显示捕获：直接捕捉整个显示屏</li><li>窗口捕获：自定义捕捉窗口内容（macOS中会闪屏）</li><li>视频捕获设备：通过摄像头录取画面（十万订阅专用）</li><li>……</li></ul><p>通常来说，在录制过程中机器就不做他用了；但如果你想要拿来干别的活同时又想要正常录制，可以考虑使用虚拟机/沙箱，通过窗口捕获获得其中的画面，并将系统中的其他软件全部静音。</p><p>此外，如果你是Windows用户，可以通过facerig创建虚拟形象（当虚拟偶像gkd），将facerig的窗口画面捕捉添加到OBS即可。</p><p><img src="/images/20.03.11/14-manipulate.png" alt="Manipulate"></p><p>OBS可以在录制时就对画面进行操纵。可以直接拖动不同画面来源的位置、进行缩放。再右键菜单中可以选择对画面进行各种变换。例如，如果想要显示时间，可以开一个终端并添加窗口捕获，然后对窗口的图像进行放大、裁剪变换，最后贴到画面的右下角。</p><p>通过使用场景切换、工作室模式，可以使得多个画面场景的切换变得流畅（比如说PPT <-> 白板）。</-></p><h2 id="OBS的录制和直播"><a href="#OBS的录制和直播" class="headerlink" title="OBS的录制和直播"></a>OBS的录制和直播</h2><p>默认情况下，OBS会生成<code>.mkv</code>格式的文件，可以通过内置的转封装或手动调用<code>ffmpeg</code>将视频转换成<code>.mp4</code>格式的文件。具体的输出大小会在第一次启动的时候根据设备配置进行推荐。</p><p>对于录制课程来说，并不需要过于高清的画面和超高的帧率，因此可以设置=&gt;视频将画面缩放至1280x720，30fps，这样录制出来的视频大约一小时100MiB不到。</p><p>在录制过程中，如遇到下课等不需要录制的时间段，可以停止录制后重新录制新的视频；也可以点击停止录制边上的暂停按钮，之后再恢复录制（这样大家看到的效果就是King Crimson了）。</p><p><img src="/images/20.03.11/14-stream.png" alt="stream"></p><p>如果需要在B站等平台进行直播，可现在B站点击开播获得推流地址和密钥，将其填写到设置=&gt;推流中即可点击“开始推流”进行直播了！</p><h1 id="15-猫片"><a href="#15-猫片" class="headerlink" title="15 猫片"></a>15 猫片</h1><p><img src="/images/20.03.11/15-1.gif" alt><br><img src="/images/20.03.11/15-4.gif" alt></p><h1 id="16-国际乒联世界巡回赛卡塔尔公开赛"><a href="#16-国际乒联世界巡回赛卡塔尔公开赛" class="headerlink" title="16 国际乒联世界巡回赛卡塔尔公开赛"></a>16 国际乒联世界巡回赛卡塔尔公开赛</h1><p><img src="/images/20.03.11/16-1.PNG" width="300"></p><p>乒乓球世界比赛嘛，这种结果很正常，混双冠军被日本队拿去一是因为这队确实厉害，二也是因为中国队最强组合“昕雯”组合（许昕和刘诗雯）没上，刘诗雯因伤退赛了。如果我没看比赛，可能也就感慨一下中国队nb然后就过去了，但是这不是被疫情关在了家里，就天天守在电视机前看比赛，倒是看得心惊胆战，颇多感慨。</p><p>除了男双许昕和马龙基本碾压以外，其他的都还挺有意思的。</p><p>一般比赛都是双打先打完，那就先说双打。</p><h2 id="女双"><a href="#女双" class="headerlink" title="女双"></a>女双</h2><p>女双我只看了决赛，中国队这边是王曼昱和朱雨玲。不太看乒乓球的可能不怎么熟悉她们俩，朱雨玲是95年的，稍微大一点，也成名的早一点，是和李晓霞刘诗雯丁宁一起打过团体赛的，现在李晓霞已经退役啦。王曼昱是99年的，成名晚一点，不过现在也是国家队女队的主力了。</p><p>日本队那边就厉害了，我也不认识，甚至完全没听说过。日本队女乒的特点就是年少成名，成名以后就开始被中国队压着打（当然也有例外，后面说）。但是这对小朋友还是小的出乎了我的意料。</p><p><img src="/images/20.03.11/16-2.jpg" width="400"></p><p>左边的是长崎美柚，02年的。右边是木原美优，04年的。前两年看到国际赛场上出现99年00后我还会惊呼一下，现在我觉得我需要接受我已经老了的这个事实。这场比赛我还是看得很淡定的，毕竟可以看出日本队的两个小将个人能力确实都比不上王曼昱和朱雨玲。只是看场上总有一种自家人在欺负别人家小朋友的感觉。</p><h2 id="混双"><a href="#混双" class="headerlink" title="混双"></a>混双</h2><p>刚刚还是自家人欺负别人家小朋友，到混双就是别人家的人欺负自家的小朋友了。</p><p>混双决赛是 王楚钦/孙颖莎 对阵 伊藤美诚/水谷隼</p><p>王楚钦和孙颖莎都是00年的。伊藤美诚虽然也是00年的，但是她在我高三的时候已经在世界赛场上对阵李晓霞连胜2局最后被李晓霞翻盘了，她也是我之前说的那个暂时没被中国队压着打的，虽然这次也没拿到女单冠军。水谷隼年纪就大了，比场上其他人大11岁。看比赛当天我发的吐槽朋友圈：</p><p><img src="/images/20.03.11/16-3.PNG" width="300"></p><p>水谷隼和伊藤美诚都成名已久，王楚钦和孙颖莎对上还真是有些招架不住。再加上王楚钦虽然单打能力强，但是不知道怎么的双打总是出岔子，低级失误一个接一个，可能是因为平时练双打比较少，双打比赛也打的比较少的缘故。</p><h2 id="男单女单"><a href="#男单女单" class="headerlink" title="男单女单"></a>男单女单</h2><p>接下来是让我心情仿佛坐过山车的男单女单。男单女单很多地方都很像，我就一起说了。</p><p>首先是四强名单，都是三个中国人一个外国人。男单是樊振东，王楚钦，许昕和皮切福德（英国）。女单是丁宁，王曼昱，陈梦和伊藤美诚。而且对外国人的可以说还都是中国队的老将，许昕和丁宁。这个阵容让我十分放心，以为中国队能双双包揽金银牌了。</p><p>结果两场半决赛打下来，许昕输给了皮切福德，丁宁输给了伊藤美诚。</p><p>另一边儿的两场半决赛赢的是樊振东（他赢王楚钦费了不少功夫）和陈梦。</p><p>看完了半决赛我都快以为这次比赛中国队只能拿到男双这一块金牌了。让樊振东去打赢了许昕的皮切福德，让陈梦去打赢了丁宁的伊藤美诚，看起来赢的概率很低。而且更别说我看了比赛，皮切福德和伊藤美诚确实都很厉害。</p><p>于是我守在电视机前看了整场比赛。</p><p>陈梦和樊振东都很棒，顶着压力一分一分地赢下来了。然后我才意识到，在乒乓球这个项目上，中国队拿到的所有冠军都不像我之前想象的那样轻松容易。并不应该是因为是中国队所以能拿到乒乓球的冠军，而是因为中国队付出了足够多值得那么多冠军。</p><h2 id="一些杂七杂八的"><a href="#一些杂七杂八的" class="headerlink" title="一些杂七杂八的"></a>一些杂七杂八的</h2><ol><li><p>新冠疫情影响：</p><p>新冠疫情对这次比赛影响还是挺大的。</p><p>一是观众席。这次观众席几乎没有什么观众，也有很多人带着口罩去。</p><p>而因为中国队因为新冠疫情在卡塔尔比赛之前直接全队去卡塔尔集训了，于是观众席上最大的一块人，就是中国队的队员和教练。看比赛的时候我经常开玩笑说中国队仗着人多在气势上压倒对方。</p><p>二是握手礼。赛场礼仪一般是比赛结束时，双方会握手，然后会和主裁副裁握手，然后会和对方的教练握手。但是这次比赛中，所有这些握手都取消了，只有中国队队内比赛后双方会握个手。颁奖仪式上握手改成了碰拳。</p></li><li><p>新陈交替：</p><p>这次比赛有很明显的新陈交替迹象。丁宁输给伊藤美诚很大一部分原因就是丁宁的技术已经有些跟不上新生代队员的技术了。而樊振东和陈梦也站出来证明了中国队的新生力量已经可以站出来顶起一片天了。当天看完比赛我的感慨就是，又一个时代过去了。</p></li></ol><h1 id="17-教程视频"><a href="#17-教程视频" class="headerlink" title="17 教程视频"></a>17 教程视频</h1><p>假期摸鱼太久了，翻了一圈感觉前段时间看的个教程视频还不错..</p><ol><li><a href="https://www.bilibili.com/video/av68697716" target="_blank" rel="noopener">C++ 教程</a>，比较全面，从最基础的环境配置到一些较高级应用都有，每个视频都不长，比较浅显易懂</li><li><a href="https://www.bilibili.com/video/av68903616" target="_blank" rel="noopener">OpenGL 教程</a></li><li><a href="https://www.bilibili.com/video/av73324208" target="_blank" rel="noopener">小型游戏引擎开发示例</a></li></ol><p>（注：后两个还没看多少，不太好评价，三个系列都是同一个人 TheCherno 做的）</p><h1 id="18-商业街"><a href="#18-商业街" class="headerlink" title="18 商业街"></a>18 商业街</h1><p>开放禁令的第一天，商业街不再是近日的冷清模样。小店的营业者慵懒地接待着客人，行人们也东张西望不知所从，好像这些繁华已经远离我们太久了。正值中午，我们来到刚开始营业的某知名店铺。刚进门，带着口罩的服务员将我们拦下，说是要微信扫码“出入”才能进。虽然已经可以恢复营业，但还是必须保持管控，客人们必须隔着一张桌子就坐，进入大商场之前也要经过红外测体温计的检查。商店开始营业了，公园也开放了，可惜我一边喝着奶盖贡茶一边看书的梦想这次看来是等不到了，因为那家奶茶店因为旧城改造被拆了，呜呜呜。</p><p><img src="/images/20.03.11/18-1.jpg" alt><br><img src="/images/20.03.11/18-2.jpg" alt></p><h1 id="19-きみのにほんごはほんとうにじょうずですれ"><a href="#19-きみのにほんごはほんとうにじょうずですれ" class="headerlink" title="19 きみのにほんごはほんとうにじょうずですれ"></a>19 きみのにほんごはほんとうにじょうずですれ</h1><p><img src="/images/20.03.11/19.jpg" width="400"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 班会&amp;团生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>17 × 19 交流活动</title>
      <link href="/19.10.29/"/>
      <url>/19.10.29/</url>
      
        <content type="html"><![CDATA[<blockquote><p>重要提示：这里是我们班的博客，里面有一些信息，可以翻翻看，但是请千万不要外传。</p></blockquote><h1 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h1><p>详见 Slides</p><h1 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h1><p>详见 Slides<br><a href="https://njujb.com" target="_blank" rel="noopener">NJU JB Online</a><br><a href="https://github.com/idealclover/awesome-nju" target="_blank" rel="noopener">Awsome-NJU</a>：各种网络资源<br><a href="http://micourse.net/" target="_blank" rel="noopener">米课</a>（服务器常年抽风）</p><h1 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h1><p>详见 Slides</p><h1 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h1><p>学校地图<br><img src="https://zcc.nju.edu.cn/DFS//file/2019/07/10/20190710140540666za4c67.jpg" alt><br>文具：教超、学友书店（二栋）<br>书（大部分二手）：学友书店（二栋）<br>裁缝、洗衣：四栋楼下<br>修车：一栋、三栋楼下<br>理发店：四栋楼下（阿玛尼）、四组团<br>吃的：罗森（四栋）、一鸣（三栋）、品缘（四栋）、学友零食店（三栋）<br><a href="https://mp.weixin.qq.com/s/R3HHW9qG6w0yrWDD5_HjQg" target="_blank" rel="noopener">咖啡店</a><br><a href="https://mp.weixin.qq.com/s/Cq42qs_uotZdMd4SBFYshw" target="_blank" rel="noopener">自助打印（成绩单、四六级成绩、证书）</a><br><a href="https://mp.weixin.qq.com/s/kY8uyLMqP7sS6HTZHsKSyg" target="_blank" rel="noopener">补办卡证</a><br><a href="https://mp.weixin.qq.com/s/LE3l4yE_t8cqvFiinO_Gmg" target="_blank" rel="noopener">时间表</a><br><a href="https://mp.weixin.qq.com/s/fReMlUqivMdM6yJNZSc_Zw" target="_blank" rel="noopener">图书馆</a><br><a href="https://mp.weixin.qq.com/s/0PgfE_Z5VGjMrzsbd0zk5g" target="_blank" rel="noopener">信息平台</a><br><a href="https://mp.weixin.qq.com/s/jCm0ZmMUiUgPLtk-fz1Wxg" target="_blank" rel="noopener">大活指南</a><br><a href="http://volunteer.nju.edu.cn" target="_blank" rel="noopener">志愿服务平台</a>，关注青协</p><p><img src="/images/19.10.29.jpg" alt></p>]]></content>
      
      
      
        <tags>
            
            <tag> 班会&amp;团生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“软件分享”班会</title>
      <link href="/19.04.02/"/>
      <url>/19.04.02/</url>
      
        <content type="html"><![CDATA[<p>根据大家的推荐和投票，选出了六个软件进行介绍。</p><h1 id="1-GitKraken-GloBoards-by-Tianyun"><a href="#1-GitKraken-GloBoards-by-Tianyun" class="headerlink" title="1 GitKraken GloBoards (by Tianyun)"></a>1 GitKraken GloBoards (by Tianyun)</h1><p><a href="https://doowzs.com/blog/gitkraken-introduction" target="_blank" rel="noopener">传送门</a></p><h1 id="2-Jupyter-Notebook-by-Fermat"><a href="#2-Jupyter-Notebook-by-Fermat" class="headerlink" title="2 Jupyter Notebook (by Fermat)"></a>2 Jupyter Notebook (by Fermat)</h1><p><a href="https://blog.zhengzangw.com/2019/03/29/Jupyter-Notebook-Introduction/" target="_blank" rel="noopener">传送门</a></p><h1 id="3-PanDownload-百度云提速下载工具-by-Maxwell"><a href="#3-PanDownload-百度云提速下载工具-by-Maxwell" class="headerlink" title="3 PanDownload 百度云提速下载工具 (by Maxwell)"></a>3 PanDownload 百度云提速下载工具 (by Maxwell)</h1><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="http://pandownload.com/" target="_blank" rel="noopener">官方网站</a><br>网站亦包含详细使用说明，不过主要是针对旧版本，以下使用说明主要面向新版本变化较大的功能进行</p><h2 id="为什么是PanDownload"><a href="#为什么是PanDownload" class="headerlink" title="为什么是PanDownload"></a>为什么是PanDownload</h2><ul><li><strong>多线程</strong><br>百度网盘的限速机制大致为80kB/s~100kB/s每线程，PanDownload最大支持128线程下载  </li><li><strong>自动更新脚本</strong><br>百度网盘并非直链下载，需要解析，解析脚本时常需要更新。PanDownload提供自动更新脚本的功能  </li><li><strong>支持多账号登陆</strong><br>我个人使用过多种百度盘第三方客户端，有一些客户端无法下载自己网盘里的文件，需要每个文件创建分享链接才能下，而支持账号登陆，批量下载自己网盘文件的客户端更是难得  </li><li><strong>附加功能多</strong><br>我知道你们都是冲着新番资源来的，怎么用看下文  </li></ul><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><h3 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h3><p>新版本加入的多标签功能，允许一个PanDownload客户端登陆多个网盘账号，或是打开多个连接。由于百度网盘单个账号的容量偏小，多个账号可以让你存更多资♂源。已登录的账号会在每次开启时自动打开一个标签页，显示此账号下的文件。<br>新建标签页，请点击标签页栏的<code>+</code>号<br><img src="/images/19.04.02-2.png" alt>  </p><h3 id="新番下载"><a href="#新番下载" class="headerlink" title="新番下载"></a>新番下载</h3><p><code>更多功能-新番下载</code><br>按照更新日分类，正在播出的新番基本都有，比B站，爱奇艺的会员慢<code>10分钟</code>左右<br>选择相应的番剧，会打开一个分享目录，右键你想要的那一集，点击下载即可享用<br>如果显示出来源为<code>AGE动漫</code>，却没有下载链接显示，多数情况下是来源站正在维护或GG了，请尝试直接前往来源站（ping一下也行）：<br><a href="http://donghua.agefans.com/" target="_blank" rel="noopener">AGE动漫</a><br>PS：我记得以前还有嘀哩嘀哩的来源的，好像D站被B站干了，就剩AGE独苗一根<br>PPS：这里的资源大多数是720P AVC（x264）格式，动作一多就是马赛克，对画质有要求的还是老老实实大会员吧（上次看刀剑神域一段UGO变剑，搞得满屏马赛克，最高祭司都不用打码了  </p><h3 id="资源搜索"><a href="#资源搜索" class="headerlink" title="资源搜索"></a>资源搜索</h3><p><code>更多功能-资源搜索</code><br>绝对的找资源神器，大量的百度盘资源随你选，除了黄赌毒基本上都能搜到  </p><h2 id="老规矩"><a href="#老规矩" class="headerlink" title="老规矩"></a>老规矩</h2><p>所有下载的资源建议<ruby>24小时内<rt>啊呀，谁知道呢</rt></ruby>删除，资源本身与软件作者和本介绍作者无关<br>看番还是建议正版，除了画质，其实<ruby>弹幕<rt>养肥再看</rt></ruby>才是本体<br>我不保证你用了就会快到吃满带宽，因为我也不能<ruby>钦点<rt>打包票</rt></ruby>的<br>，但是你问我<ruby>支不支持<rt>有没有可能性</rt></ruby>那我肯定是支持的  </p><h1 id="4-Anki-背诵和记忆任何东西-by-Maxwell"><a href="#4-Anki-背诵和记忆任何东西-by-Maxwell" class="headerlink" title="4 Anki 背诵和记忆任何东西 (by Maxwell)"></a>4 Anki 背诵和记忆任何东西 (by Maxwell)</h1><h2 id="官方网站"><a href="#官方网站" class="headerlink" title="官方网站"></a>官方网站</h2><p>下载地址在官网，有Windows，Mac，Linux，iPhone/Android等版本<br><a href="http://www.ankichina.net/" target="_blank" rel="noopener">中文官网</a><br><a href="https://apps.ankiweb.net/index.html" target="_blank" rel="noopener">英文官网</a>  </p><h2 id="Anki是什么"><a href="#Anki是什么" class="headerlink" title="Anki是什么"></a>Anki是什么</h2><p><img src="/images/19.04.02-1.png" alt="暗杀教室"><br>Anki是日语“<ruby>暗<rt>あん</rt></ruby><ruby>記<rt>き</rt></ruby>”的罗马音，意为背诵，是目前世界最流行的记忆软件之一。这个软件在形式上类似“百词斩”等卡片式背单词软件，但功能却多出一个数量级。</p><h2 id="为什么是Anki"><a href="#为什么是Anki" class="headerlink" title="为什么是Anki"></a>为什么是Anki</h2><p>我在使用Anki的时候，对这一软件的以下功能有所尝试：  </p><ul><li>跨平台<br>Anki支持Windows（Win32和UWP都有），Linux，Mac，IOS，Android，而且这是一个开源软件，如果有必要，你甚至可以开发编译自己的版本</li><li>同步<br>借助AnkiWeb，跨设备同步记忆卡片组和学习进度。Github上还有搭建 自己的同步服务器的开源项目，B站也有相应的视频教程。此外，OneDrive也是可选的同步方式</li><li>灵活的卡片形式  <ol><li>普通的询问式卡片，选择题，填空题</li><li>支持LaTex(PC端可编辑和渲染源码，移动端仅支持查看图片缓存)</li><li>允许插入图片</li><li>允许插入音频甚至是视频（较大的媒体文件将会耗费大量时间同步）</li><li>允许打包分享卡片，网络上可以购买到现成的影音英语学习卡组</li></ol></li><li>自动化<br>很多优秀的脚本可以让你一键生成卡组，例如为英文单词列表自动查询字典，并匹配相应的中文释义，例句和发音，支持百度翻译，灵格斯自定义词典文件等<br>英语读写课给的英文单词表，一个脚本即可匹配牛津词典的释义和例句，3分钟不到就可以开始学习</li><li>科学的记忆<br>符合记忆规律，根据错误次数自动计算最合适的复习时间点，从几分钟到数年之后不等（最短的小于一分钟，我见过最长的是2年后）</li></ul><h2 id="怎么用？RTFM！"><a href="#怎么用？RTFM！" class="headerlink" title="怎么用？RTFM！"></a>怎么用？RTFM！</h2><p>这个软件提供了及其详细的手册！大家自己看吧。入门请不要使用移动版（iPhone/Android），因为功能不全<br><a href="http://www.ankichina.net/Index/ankishouce" target="_blank" rel="noopener">中文手册(翻译中)</a><br><a href="https://apps.ankiweb.net/docs/manual.html" target="_blank" rel="noopener">英文手册</a>    </p><h1 id="5-Mathpix-–-Convert-images-to-LaTeX-by-Tao-Zhou"><a href="#5-Mathpix-–-Convert-images-to-LaTeX-by-Tao-Zhou" class="headerlink" title="5 Mathpix – Convert images to $\LaTeX$ (by Tao Zhou)"></a>5 Mathpix – Convert images to $\LaTeX$ (by Tao Zhou)</h1><p><img src="https://mathpix.com/images/mathpix-page/snip_mac@2x.png" alt="图片"></p><h2 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h2><p>一键（组合快捷键）将数学公式的截图转化为$\LaTeX$文本，以供粘贴。</p><h2 id="支持系统"><a href="#支持系统" class="headerlink" title="支持系统"></a>支持系统</h2><ul><li>MacOS </li><li>Windows </li><li>Ubuntu</li></ul><h2 id="使用案例"><a href="#使用案例" class="headerlink" title="使用案例"></a>使用案例</h2><ul><li>大物论文</li><li>问求抄题/<del>抄答案</del></li><li>等等等等</li></ul><ul><li>例一<br><img src="https://s2.ax1x.com/2019/03/31/ArUz59.png" alt="ArUz59.png"></li><li>例二<br><img src="https://s2.ax1x.com/2019/03/31/Ara981.png" alt="Ara981.png"></li><li>例三<br><img src="https://s2.ax1x.com/2019/03/31/ArapCR.png" alt="ArapCR.png"></li></ul><h2 id="产品特点"><a href="#产品特点" class="headerlink" title="产品特点"></a>产品特点</h2><ul><li>轻量？(119兆)</li><li>简洁 <ul><li>无常驻界面，后台快捷键唤醒</li></ul></li><li>快捷<ul><li>一键（组合键）唤醒，选取后自动解析并复制到剪切板</li></ul></li><li>准确<ul><li>识别准确率高</li></ul></li><li>at least, 诚实<ul><li><em>Confidence</em> 指出结果可信程度</li></ul></li></ul><h2 id="用户反馈"><a href="#用户反馈" class="headerlink" title="用户反馈"></a>用户反馈</h2><blockquote><p>如果早知道有Mathpix存在，我就有足够的时间来建立大一统理论了！<br>(<strong>阿尔伯特·爱因斯坦</strong>)</p></blockquote><blockquote><p>当我弄丢《自然哲学的数学原理》的.tex文件时，我陷入了深深的绝望。Mathpix帮助我轻松地恢复了我的公式。我现在有更多的时间站在树下等着被苹果砸中了！<br>(<strong>艾萨克·牛顿爵士</strong>)</p></blockquote><blockquote><p>Mathpix的AI显然能够通过图灵测试！<br>(<strong>阿兰·图灵</strong>)</p></blockquote><h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><ul><li><a href="https://mathpix.com/" target="_blank" rel="noopener">https://mathpix.com/</a></li></ul><h1 id="6-Visual-Studio-2017-by-Lanceloia-Leung"><a href="#6-Visual-Studio-2017-by-Lanceloia-Leung" class="headerlink" title="6 Visual Studio 2017 (by Lanceloia Leung)"></a>6 Visual Studio 2017 (by Lanceloia Leung)</h1><p>比较常用的2017版新功能：<br><a href="https://www.cnblogs.com/Leo_wl/p/6581647.html" target="_blank" rel="noopener">https://www.cnblogs.com/Leo_wl/p/6581647.html</a><br>(1) Filtered IntelliSense<br>(2) Predictive IntelliSense<br>(4) Run-To-Click<br>(5) Run-To-Click Performance Tips<br>(10) The New Exception Helper<br>(14) Quick Actions and Refactorings</p><p>强迫症福利：<br>工具 -&gt; 选项 -&gt; 文本编辑器 -&gt; C/C++ -&gt; 格式设置</p><ul><li>换行<ul><li>块的换行</li></ul></li><li>间距<ul><li>函数圆括号的间距</li><li>控制块的间距</li><li>lambda的间距</li><li>…</li></ul></li><li>缩进<ul><li>缩进大括号</li><li>缩进case</li><li>缩进goto标签</li><li>缩进预处理器指令的位置</li><li>…</li></ul></li><li>新行<ul><li>左大括号的位置</li><li>右大括号的位置</li><li>关键字位置</li></ul></li></ul><p>调试工具：</p><ul><li>变量监视<ul><li>智能输出变量的值</li><li>对STL容器效果拔群</li></ul></li><li>线程监视<ul><li>可以查看各个线程的状况</li></ul></li><li>调用堆栈<ul><li>可以查看非当前栈帧的局部变量的值</li></ul></li><li>断点<ul><li>普通断点</li><li>条件断点</li><li>可以输出Log的断点</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 班会&amp;团生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“知名教授进支部”主题团日总结报告</title>
      <link href="/19.03.19/"/>
      <url>/19.03.19/</url>
      
        <content type="html"><![CDATA[<p>3月19日中午，人工智能与数据挖掘研究所詹德川副教授应我班邀请，以LAMDA组介绍与机器学习技术应用实践为主题，向同学们做一场报告。</p><p><img src="/images/19.03.19-1.jpg" width="90%"></p><p>詹德川副教授首先从“机器学习是什么？”的问题出发，向同学们介绍了机器学习的定义，并介绍了文献筛选、搜索引擎、自动驾驶等应用机器学习技术的典型案例。而机器学习与人工智能的发展并非一帆风顺，由于低估了人工智能的复杂性，且研究脱离了现实问题，人工智能发展历史上曾经经历过两次寒冬，并引发了学术界对AI及其技术和可信性的讨论。随着现代计算机的发展与信息化程度的提高，越来越多的新问题与新需求的出现使得人工智能和机器学习再次成为热门学科。</p><p><img src="/images/19.03.19-2.jpg" width="90%"></p><p>接着，詹德川副教授通过LAMDA组内的真实研究案例，向同学们生动地普及机器学习相关技术的应用。首先展示的是将机器学习应用于确定南极科考的航线。机器在学习此模型时，需要能准确地辨别卫星云图中的图像，识别出海、云、冰等多种可能的组成部分，进一步确定能够航行的范围。在图像处理过程中，通过将图像的图形特征处理转换为数学特征才能够让机器来学习模型。同时，机器学习所得出的结论未必准确。在这个案例中，机器只考虑了从卫星云图判断是否能够航行，并未考虑到地形、环境等地理条件，这一点也体现出了机器学习的局限性。</p><p><img src="/images/19.03.19-3.png" width="90%"></p><p><img src="/images/19.03.19-4.jpg" width="90%"></p><p>最后，詹德川副教授向同学们介绍更加贴近生活的几个案例，包括与游戏公司合作的对玩家与用户的建模分析、滴滴等新型互联网公司如何巧妙地对数据进行处理利用等。本次讲座让同学们耳目一新，对机器学习的应用有了更加深入的了解，同学们都感到意犹未尽、收获颇多。本次“知名教授进支部”的活动也在同学们与詹德川副教授的互动中圆满落幕。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 信息 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>问题求解三 机试 非官方题解</title>
      <link href="/19.01.11/"/>
      <url>/19.01.11/</url>
      
        <content type="html"><![CDATA[<p>OJ 题意全靠猜。<br>数据范围全靠猜。<br>重边自环全靠猜。<br>有向无向全靠猜。<br>输入结束全靠猜。<br>错别字意全靠猜。<br><del>那要不要猜一猜考试成绩呢。</del></p><h1 id="Problem-A"><a href="#Problem-A" class="headerlink" title="Problem A"></a>Problem A</h1><blockquote><p>判断输入 parent-child 关系是否构成一棵树。要求使用并查集。</p></blockquote><p>搜到了<a href="https://blog.csdn.net/cxllyg/article/details/8225835" target="_blank" rel="noopener">原题</a>。算法是：</p><blockquote><p>Step 1：对每对输入的根节点标记表示这些节点出现过，进行并操作。并操作时两个节点不能有相同的根节点否则将构成环；假设b节点要接到a上，则要保证b节点是一个根节点，否则若进行并操作，b将会有两个父节点；若无以上情况，则可以合并两棵树。<br>Step 2：每组数据输入结束后，要计算整个图中的根节点总数，若根节点总数不为1，则构成的图不是一棵树。<br>Step 3：根据以上判断就可以输出结果了，每组结果输出后要初始化数据。</p></blockquote><p>无法理解为什么要用并查集，明明找个入度为 0 的点搜索一下就 O(n) 了。<br>而且这个解法无法处理重边，题面也没说有没有重边自环，否则也不应该出现编号为 0 的点。<br>　<br>代码请看上面原题链接。</p><h1 id="Problem-B"><a href="#Problem-B" class="headerlink" title="Problem B"></a>Problem B</h1><blockquote><p>给一个无向图，问是否存在从 Alice 家到 Bob 家再到学校的结点不重复的路径。</p></blockquote><p>每个点拆点，流量为 1。源点流向 Bob 家，流量为 2。Alice 家和学校流向汇点，流量为 1。</p><p>判断最大流是否为 2。</p><p><del>现场默写 dinic，居然写对了。</del></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">420</span>, M = N * N * <span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, ecnt, ds[N], head[N], S, T;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span> &#123;</span></span><br><span class="line">  <span class="keyword">int</span> to, rest, next;</span><br><span class="line">&#125; E[M];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Addedge</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">  E[++ecnt] = (edge) &#123;y, r, head[x]&#125;;</span><br><span class="line">  head[x] = ecnt;</span><br><span class="line">  E[++ecnt] = (edge) &#123;x, <span class="number">0</span>, head[y]&#125;;</span><br><span class="line">  head[y] = ecnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">memset</span>(ds, <span class="number">0</span>, <span class="keyword">sizeof</span>(ds));</span><br><span class="line">  ds[S] = <span class="number">1</span>;</span><br><span class="line">  Q.push(S);</span><br><span class="line">  <span class="keyword">while</span> (!Q.empty()) &#123;</span><br><span class="line">    <span class="keyword">int</span> x = Q.front();</span><br><span class="line">    Q.pop();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> e = head[x]; e; e = E[e].next) &#123;</span><br><span class="line">      <span class="keyword">int</span> y = E[e].to;</span><br><span class="line">      <span class="keyword">if</span> (E[e].rest &amp;&amp; !ds[y]) &#123;</span><br><span class="line">        ds[y] = ds[x] + <span class="number">1</span>;</span><br><span class="line">        Q.push(y);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ds[T];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> flow)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (x == T) <span class="keyword">return</span> flow;</span><br><span class="line">  <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> e = head[x]; e; e = E[e].next) &#123;</span><br><span class="line">    <span class="keyword">int</span> y = E[e].to;</span><br><span class="line">    <span class="keyword">if</span> (E[e].rest &amp;&amp; ds[y] == ds[x] + <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">int</span> b = Dfs(y, <span class="built_in">std</span>::min(flow - a, E[e].rest));</span><br><span class="line">      E[e].rest -= b;</span><br><span class="line">      E[e ^ <span class="number">1</span>].rest += b;</span><br><span class="line">      a += b;</span><br><span class="line">      <span class="keyword">if</span> (a == flow) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!a) ds[S] = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Dinic</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (Bfs()) ans += Dfs(S, <span class="number">0x7fffffff</span>);</span><br><span class="line">  <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> cas;</span><br><span class="line">  <span class="keyword">for</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;cas); cas; --cas) &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">    S = <span class="number">0</span>;</span><br><span class="line">    T = n * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">    ecnt = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">memset</span>(head, <span class="number">0</span>, <span class="keyword">sizeof</span>(head));</span><br><span class="line">    <span class="keyword">int</span> x, y, z;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">      Addedge(i, i + n, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;x, &amp;y);</span><br><span class="line">      Addedge(n + x + <span class="number">1</span>, y + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">      Addedge(n + y + <span class="number">1</span>, x + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;x, &amp;y, &amp;z);</span><br><span class="line">    Addedge(S, n + y + <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    Addedge(n + x + <span class="number">1</span>, T, <span class="number">1</span>);</span><br><span class="line">    Addedge(n + z + <span class="number">1</span>, T, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (Dinic() == <span class="number">2</span>) <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Problem-C"><a href="#Problem-C" class="headerlink" title="Problem C"></a>Problem C</h1><blockquote><p>给一棵树，每个点有一个权值，若选择一个点则其 parent 不能被选，问权值和最大的方案。</p></blockquote><p>树形 DP，dp[i][0/1] 表示点 i 是否被选时子树的最大值。转移方程：<br>$dp[i][0]=\sum\limits_{child\ j}\max(dp[j][0],dp[j][1]),$</p><p>$dp[i][1]=value[i] + \sum\limits_{child\ j}dp[j][0].$</p><p><del>出题人又不知道树的边数是 n-1 了。</del></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cassert&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">6010</span>;</span><br><span class="line"><span class="keyword">int</span> n, ecnt, root, a[N], du[N], dp[N][<span class="number">2</span>], head[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span> &#123;</span></span><br><span class="line">  <span class="keyword">int</span> to, next;</span><br><span class="line">&#125; E[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Addedge</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">  E[++ecnt] = (edge) &#123;y, head[x]&#125;;</span><br><span class="line">  head[x] = ecnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> pa)</span> </span>&#123;</span><br><span class="line">  dp[x][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">  dp[x][<span class="number">1</span>] = a[x];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> e = head[x]; e; e = E[e].next) &#123;</span><br><span class="line">    <span class="keyword">int</span> y = E[e].to;</span><br><span class="line">    <span class="keyword">if</span> (y == pa) <span class="keyword">continue</span>;</span><br><span class="line">    Dfs(y, x);</span><br><span class="line">    dp[x][<span class="number">0</span>] += <span class="built_in">std</span>::max(dp[y][<span class="number">0</span>], dp[y][<span class="number">1</span>]);</span><br><span class="line">    dp[x][<span class="number">1</span>] += dp[y][<span class="number">0</span>];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, x, y; i &lt; n; ++i) &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;x, &amp;y);</span><br><span class="line">    du[x]++;</span><br><span class="line">    Addedge(y, x);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">    <span class="keyword">if</span> (du[i] == <span class="number">0</span>) &#123;</span><br><span class="line">      assert(root == <span class="number">0</span>);</span><br><span class="line">      root = i;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  Dfs(root, <span class="number">0</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, <span class="built_in">std</span>::max(dp[root][<span class="number">0</span>], dp[root][<span class="number">1</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Problem-D"><a href="#Problem-D" class="headerlink" title="Problem D"></a>Problem D</h1><blockquote><p>给一个无向图，其中一些点为起点，一些为终点。问任意一对起点终点直接的最短距离。要求使用 Dijkstra。</p></blockquote><p>源点和起点之间连边，代价为 0；终点和汇点之间连边，代价为 0。求 S 到 T 的最短路。<br>或者只建源点，终点判断一下。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1005</span>, M = <span class="number">40010</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x7fffffff</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span> &#123;</span></span><br><span class="line">  <span class="keyword">int</span> to, cost, next;</span><br><span class="line">&#125; E[M];</span><br><span class="line"><span class="keyword">int</span> ecnt, n, S, head[N], ds[N];</span><br><span class="line"><span class="built_in">std</span>::priority_queue&lt;<span class="built_in">std</span>::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt; q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Addedge</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span> </span>&#123;</span><br><span class="line">  E[++ecnt] = (edge) &#123;y, z, head[x]&#125;;</span><br><span class="line">  head[x] = ecnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) ds[i] = inf;</span><br><span class="line">  q.push(<span class="built_in">std</span>::make_pair(<span class="number">0</span>, S));</span><br><span class="line">  <span class="keyword">while</span> (!q.empty()) &#123;</span><br><span class="line">    <span class="built_in">std</span>::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; x = q.top();</span><br><span class="line">    q.pop();</span><br><span class="line">    <span class="keyword">if</span> (ds[x.second] &lt; inf) <span class="keyword">continue</span>;</span><br><span class="line">    ds[x.second] = -x.first;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> e = head[x.second]; e; e = E[e].next) &#123;</span><br><span class="line">      q.push(<span class="built_in">std</span>::make_pair(x.first - E[e].cost, E[e].to));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> m, n1, n2;</span><br><span class="line">  <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;m, &amp;n1, &amp;n2) != EOF) &#123;</span><br><span class="line">    n = <span class="number">1000</span>;</span><br><span class="line">    S = <span class="number">0</span>;</span><br><span class="line">    ecnt = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(head, <span class="number">0</span>, <span class="keyword">sizeof</span>(head));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, x, y, z; i &lt;= m; ++i) &#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;x, &amp;y, &amp;z);</span><br><span class="line">      Addedge(x, y, z);</span><br><span class="line">      Addedge(y, x, z);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, x; i &lt;= n1; ++i) &#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">      Addedge(S, x, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Dijkstra();</span><br><span class="line">    <span class="keyword">int</span> ans = inf;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, x; i &lt;= n2; ++i) &#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">      ans = <span class="built_in">std</span>::min(ans, ds[x]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>班级活动参加队列</title>
      <link href="/18.11.29/"/>
      <url>/18.11.29/</url>
      
        <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>为了防止强制活动找不到人参加，班委讨论后拟如下方法：</p><p>随机生成本班31人的循环队列，但凡有院系强制任务，取出接下来几位同学参加，并标记。特殊情况如下：</p><ol><li>因事无法参加：出示具体原因后，保留在队列位置，不加标记，顺次取下一位同学。</li><li>自愿参加：给下一次打标记。</li><li>活动优先考虑自愿参加的同学。</li><li>运动会参加入场式和广播操的已经算参加过了，按2处理。马上进行的合唱选人也由本方案进行。</li></ol><p>该方法旨在保证每位同学参加的活动次数相同、能事先安排好相关事宜。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>使用 NumPy 1.15 (python3)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"></span><br><span class="line">students = [</span><br><span class="line">  // omitted :)</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    numpy.random.shuffle(students)</span><br><span class="line">    <span class="keyword">for</span> student <span class="keyword">in</span> students:</span><br><span class="line">        print(student)</span><br></pre></td></tr></table></figure><h1 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h1><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">学号</th><th style="text-align:center">参加活动（标记）</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">171860649</td><td style="text-align:center">写文章</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">171250630</td><td style="text-align:center">运动会</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">171860543</td><td style="text-align:center">写文章</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">171250623</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">171860017</td><td style="text-align:center">运动会</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">171860571</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">171860609</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">171860553</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">171860592</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">171860637</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">171860696</td><td style="text-align:center">合唱</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">171860599</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">13</td><td style="text-align:center">171860639</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">14</td><td style="text-align:center">171860509</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">15</td><td style="text-align:center">171860575</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">16</td><td style="text-align:center">171860013</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">17</td><td style="text-align:center">171860532</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">18</td><td style="text-align:center">171860558</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">19</td><td style="text-align:center">171860508</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">20</td><td style="text-align:center">171860547</td><td style="text-align:center">运动会</td></tr><tr><td style="text-align:center">21</td><td style="text-align:center">171180558</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">22</td><td style="text-align:center">171870691</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">23</td><td style="text-align:center">171860548</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">24</td><td style="text-align:center">171860647</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">25</td><td style="text-align:center">171860624</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">26</td><td style="text-align:center">171860004</td><td style="text-align:center">运动会</td></tr><tr><td style="text-align:center">27</td><td style="text-align:center">171860578</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">28</td><td style="text-align:center">171860658</td><td style="text-align:center">运动会</td></tr><tr><td style="text-align:center">29</td><td style="text-align:center">171860695</td><td style="text-align:center">运动会</td></tr><tr><td style="text-align:center">30</td><td style="text-align:center">171860020</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">31</td><td style="text-align:center">171860538</td></tr></tbody></table><p>注：上表中的标记包括本学期的两个活动。如果你发现标记有误请及时联系班委。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 信息 </tag>
            
            <tag> 公告 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JB Blog 使用指南</title>
      <link href="/18.11.12/"/>
      <url>/18.11.12/</url>
      
        <content type="html"><![CDATA[<p>欢迎大家一起管理博客。</p><p>强烈欢迎投稿，有什么想分享交流的，都可以自己写文章(markdown)更新，或者戳班委帮忙更新。</p><h1 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h1><p>Hexo是一种静态博客引擎，博客托管在Github上。</p><p>想了解更多关于 <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>，请STFW。  </p><ol><li>下载 <a href="https://git-scm.com/" target="_blank" rel="noopener">git</a> 和 <a href="https://nodejs.org/" target="_blank" rel="noopener">node.js</a> 并安装。  </li><li>打开 git bash, 安装 Hexo。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure></li></ol><h1 id="Get-source"><a href="#Get-source" class="headerlink" title="Get source"></a>Get source</h1><p>Github Organization <a href="https://github.com/NJUCSE17" target="_blank" rel="noopener">NJUCSE17</a>，想要加入的话可以戳管理员拉进去。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/NJUCSE17/hexo-blog.git</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>然后就可以本地查看博客了(<a href="http://localhost:4000)。" target="_blank" rel="noopener">http://localhost:4000)。</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure></p><h1 id="RTFSC"><a href="#RTFSC" class="headerlink" title="RTFSC"></a>RTFSC</h1><p>目录下的主要文件有<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">hexo-blog</span><br><span class="line">├── source         # 文件</span><br><span class="line">│   ├── _posts     # 所有文章</span><br><span class="line">│   ├── about      # /about 页面</span><br><span class="line">│   ├── attachment # 存放其他附件</span><br><span class="line">│   ├── images     # 存放图片</span><br><span class="line">│   ├── tags       # /tags 页面，不需要改动</span><br><span class="line">├── themes         # 主题</span><br><span class="line">│   ├── vexo       # 当前主题 vexo，一般不需要改动</span><br><span class="line">├── _config.yml    # 参数，一般不需要改动</span><br><span class="line">└── package.json   # 插件</span><br></pre></td></tr></table></figure></p><p>主要就是在<code>/source/_posts</code>里写文章了，格式可以参考其他文件。</p><p>文件开头的参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">date: YYYY-MM-DD HH:MM</span><br><span class="line">status: public # 这个不写也没关系</span><br><span class="line">title: 标题</span><br><span class="line">tags: 标签 # 可以参考 tags 页面的类别，没有合适的就新写一个</span><br><span class="line">author: 作者</span><br><span class="line">catalog: true / false # 右边的目录，默认为true</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><h1 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h1><ol><li><p>写博客之前先<code>git pull</code>，同步备份文件。</p></li><li><p>改动后，可以先<code>hexo s</code>，如果本地看起来差不多了，再</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><p> 就可以更新博客了。</p></li><li><p>同时记得即使<code>git add, commit, push</code>，更新备份文件。</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 公告 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>香港交流证件提交通知</title>
      <link href="/18.10.30/"/>
      <url>/18.10.30/</url>
      
        <content type="html"><![CDATA[<ul><li><p>截止日期：2018年11月15日</p></li><li><p>提交方式：扫描件通过QQ发送给姜勇刚同学</p></li><li><p>注意事项：</p><ul><li>请提交<strong>一张</strong><code>.jp[e]g</code>或<code>.png</code>格式的图片</li><li>文件名例如：<code>171860501 张三.png</code></li><li>确保证件双面扫描件内容清晰可读。</li></ul></li><li><p><del>一点都不常见的</del>常见问题：</p><ul><li><p>Q：没有扫描仪怎么办？</p><p>A：可以去<del>打印店、</del>实验楼119门口打印机或者找张天昀帮你扫描。别拍照。</p></li><li><p>Q：我分开扫描的，给两张不行吗？</p><p>A：恳请您动动手处理一下。</p></li><li><p>Q：我的隐私老宝贵了，QQ这么垃圾的方式不安全</p><p>A：您可以主动联系姜勇刚同学。</p></li><li><p>Q：我的隐私老宝贵了，我要扫描件加水印</p><p>A：……（旅行证件可以加水印嘛？）</p></li><li><p>Q：大危机，我11月15日之前拿不到证件！</p><p>A：私戳姜勇刚同学。如果人多会统一联系老师延迟DDL时间。</p></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 信息 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>香港学术交流相关事宜</title>
      <link href="/18.09.25/"/>
      <url>/18.09.25/</url>
      
        <content type="html"><![CDATA[<h1 id="活动概览"><a href="#活动概览" class="headerlink" title="活动概览"></a>活动概览</h1><h2 id="组织目的"><a href="#组织目的" class="headerlink" title="组织目的"></a>组织目的</h2><ul><li><p>走出校园，开阔眼界</p></li><li><p>提升学习计算机科学的兴趣</p></li><li><p>培养科学素养</p></li><li><p><strong>不是旅游</strong> <strong>不是旅游</strong> <strong>不是旅游</strong> </p></li></ul><h2 id="活动内容"><a href="#活动内容" class="headerlink" title="活动内容"></a>活动内容</h2><ul><li>第四学期开学前一周举行，<strong>自愿</strong>参加</li><li>NJU-HKUST科技大赛<ul><li>会有一至两个月提前准备，3~4人组队共一天半时间对指定课题进行研究，然后半天时间进行汇报评比。</li></ul></li><li>学术交流：香港大学、香港中文大学等参观交流</li><li>每天8~17点安排活动，<strong>如果参加则视为认同学校的安排，需要随团体一起参加活动</strong>。</li></ul><h1 id="报名相关"><a href="#报名相关" class="headerlink" title="报名相关"></a>报名相关</h1><h2 id="费用问题"><a href="#费用问题" class="headerlink" title="费用问题"></a>费用问题</h2><ul><li>按大一学分绩进行排名，前20名全额资助，20名以后半额资助（自费约2000元）。<ul><li>排名课程：微积分、问题求解、大学物理、微电子等。</li><li>加分项目：学生工作、学科竞赛，参照学校正常加分规则进行。</li><li>以上排名规则会根据实际情况变化。</li></ul></li><li>如果因自身原因原定参加但无法参加，需要自理退订机票、酒店产生的费用。</li></ul><h2 id="报名时间（CST）"><a href="#报名时间（CST）" class="headerlink" title="报名时间（CST）"></a>报名时间（CST）</h2><ul><li><p><strong>2018年09月27日17时</strong>前，所有有意向参加的同学向姜勇刚同学发送申请。</p><ul><li><p>报名信息的格式如下</p><blockquote><p>姓名：张三<br>学号：171862333<br>加分项：ACM金牌、数模一等奖、美赛一等奖……</p></blockquote></li></ul></li><li><p>2018年09月28日（暂定），公示排名。</p></li><li><p>2018年09月30日前（暂定），进行二次确认。</p></li></ul><h1 id="签注相关"><a href="#签注相关" class="headerlink" title="签注相关"></a>签注相关</h1><p>所有参加学术交流的同学需要持有有效的港澳通行证（双程证）和往返香港签注（<strong>个人旅游</strong>签注，简称G签）。已经持有双程证和签注的同学需要留意有效期。</p><p>报名时可以暂不提交通行证，但必须在11月底前（暂定）提交卡式通行证正反面扫描件或本式通行证内页扫描件。</p><p>双程证和签注的办理方式如下：</p><ul><li>南京、无锡、苏州户籍，可持<strong>身份证</strong>至栖霞区政务服务中心办理。<ul><li>已经办理过通行证且仍在有效期内的，需<strong>携带原件</strong>。</li><li>如果原件丢失且<strong>仍在有效期</strong>，需回本籍或前往南京市出入境管理局办理。</li></ul></li><li>其他户籍，若原籍可以办理G签，可自行想办法解决；否则必须在南京办理。<ul><li>需要携带<strong>身份证、居住证</strong>至上述地点办理。</li><li>如果办理过通行证需携带原件。</li><li>如果证件丢失，建议提前联系出入境管理中心咨询解决方案。</li></ul></li><li>办理地址：<ul><li>栖霞区政府服务中心：栖霞区仙林大学城文苑路118号仙林商务中心一层；</li><li>南京市出入境管理局：南京市秦淮区白下路173号。</li></ul></li></ul><p>居住证办理方式如下：</p><ul><li>计拔同学填写《居住证申请表》（电子表），<strong>2018年09月27日17时</strong>之前发送给姜勇刚同学，由他统一打印盖章并发放，后续办理个人独自进行（见下）。</li><li>匡院同学请自行组织。居住证的办理需要打印《居住证申请表》，将居住证申请表格填写完整（<strong>每人填写两份</strong>），院系盖章，由本人拿到保卫处盖章，再至仙林派出所办理。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 信息 </tag>
            
            <tag> 班会&amp;团生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>9月班会活动选项</title>
      <link href="/18.09.02/"/>
      <url>/18.09.02/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>本次班会主题为破冰活动，旨在增进拔尖班新老同学与匡院计算机方向同学之间的友谊与感情，活动具体内容准备在如下方案中挑选：</p><h2 id="桌游"><a href="#桌游" class="headerlink" title="桌游"></a>桌游</h2><p>提供Uno/Monopoly/Exploding Kitten等多种简单卡牌式桌游和其他桌游，按想玩的随机分组进行游戏，增进友谊。考虑到人数问题可能会在食堂进行。</p><h2 id="“问题求解”"><a href="#“问题求解”" class="headerlink" title="“问题求解”"></a>“问题求解”</h2><ul><li><p>所有同学提出几个问题，问题需要贴近学习和生活，有开放性的回答，如</p><ul><li>问题求解做不出的时候怎么办？抄答案期末不会挂科吗？</li><li>你觉得最好的编程语言是什么，为什么？</li></ul><p>而不是</p><ul><li><del>你有男/女朋友吗？</del></li><li><del>你渴望爱情吗？</del></li></ul></li><li><p>所有的问题进行“筛选”后随机打乱，在班会上展示</p></li><li><p>每人随机抽取问题发表想法/吐槽</p></li></ul><h2 id="击鼓传花"><a href="#击鼓传花" class="headerlink" title="击鼓传花"></a>击鼓传花</h2><p>经典破冰游戏。</p><h2 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h2><p>纯粹的破冰活动。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 班会&amp;团生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2017 问题求解二 期末考试</title>
      <link href="/18.07.12/"/>
      <url>/18.07.12/</url>
      
        <content type="html"><![CDATA[<p>请忽略玄学的代码高亮</p><h1 id="1519-Problem-A-简单搜索"><a href="#1519-Problem-A-简单搜索" class="headerlink" title="1519 Problem A 简单搜索"></a><a href="http://114.212.10.47:8084/problem.php?cid=1039&amp;pid=0" target="_blank" rel="noopener">1519 Problem A 简单搜索</a></h1><blockquote><p>输入升序排列的数组，查询某个元素的位置。（n&lt;=1e5）</p></blockquote><p>一个 lower_bound 或者 map 解决，但似乎老师说要手写二分。<br>　<br>听说卡 cin？</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> n, m, a[<span class="number">100000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, x; i &lt; m; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">        <span class="keyword">int</span> l = <span class="number">0</span>, r = n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (x &lt;= a[mid]) r = mid;</span><br><span class="line">            <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, l);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="1079-Problem-B-Quicksort"><a href="#1079-Problem-B-Quicksort" class="headerlink" title="1079 Problem B Quicksort"></a><a href="http://114.212.10.47:8084/problem.php?cid=1039&amp;pid=1" target="_blank" rel="noopener">1079 Problem B Quicksort</a></h1><blockquote><p>手写快排。（n&lt;=1e5）</p></blockquote><p>人生第一次手写快排，幸亏看到了提示。<br>　<br>听说有人死于不会写随机数。但这题并不需要很严格的随机数，乱搞一下应该就过了。<br>法一：调用 <code>cstdlib</code> 库中的 <code>rand()</code>。<br>法二：调用 <code>algorithm</code> 库中的 <code>std::random_shuffle()</code> 直接打乱原数组。<br>法三：随便找个数列 $r_i = (a\times r_{i-1} + b)\bmod p$ 作为随机数。<br>法四：把数列中的左端点、中间点、三分点之类的作为 pivot。<br>注：前两个需要 <code>std::srand(time(NULL))</code>。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> n, a[<span class="number">100005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QuickSort</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> x = rand() % (r - l + <span class="number">1</span>) + l, mid = l;</span><br><span class="line">    <span class="built_in">std</span>::swap(a[x], a[r]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = l, x = a[r]; i &lt; r; ++i)</span><br><span class="line">        <span class="keyword">if</span>(a[i] &lt; x) <span class="built_in">std</span>::swap(a[i], a[mid++]);</span><br><span class="line">    <span class="built_in">std</span>::swap(a[mid], a[r]);</span><br><span class="line"></span><br><span class="line">    QuickSort(l, mid - <span class="number">1</span>);</span><br><span class="line">    QuickSort(mid + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::srand(time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) != EOF) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        QuickSort(<span class="number">1</span>, n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d%c"</span>, a[i], i &lt; n ? <span class="string">' '</span> : <span class="string">'\n'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="1520-Problem-C-二叉树计数"><a href="#1520-Problem-C-二叉树计数" class="headerlink" title="1520 Problem C 二叉树计数"></a><a href="http://114.212.10.47:8084/problem.php?cid=1039&amp;pid=2" target="_blank" rel="noopener">1520 Problem C 二叉树计数</a></h1><blockquote><p>递归计算二叉树每个结点的子树结点个数。</p></blockquote><p>树边不是 n-1 条吗 hhhhh</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1000005</span>;</span><br><span class="line"><span class="keyword">int</span> n, size[N], ch[N][<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Dfs</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    size[x] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (ch[x][<span class="number">0</span>]) size[x] += Dfs(ch[x][<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">if</span> (ch[x][<span class="number">1</span>]) size[x] += Dfs(ch[x][<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> size[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">char</span> opt[<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x == <span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s%d"</span>, opt, &amp;y);</span><br><span class="line">        ch[x + <span class="number">1</span>][opt[<span class="number">0</span>] == <span class="string">'R'</span>] = y + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Dfs(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d : %d\n"</span>, i - <span class="number">1</span>, size[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="1214-Problem-D-Red-Black-Tree-2"><a href="#1214-Problem-D-Red-Black-Tree-2" class="headerlink" title="1214 Problem D Red-Black Tree-2"></a><a href="http://114.212.10.47:8084/problem.php?cid=1039&amp;pid=3" target="_blank" rel="noopener">1214 Problem D Red-Black Tree-2</a></h1><blockquote><p>手写红黑树的插入。</p></blockquote><p>伪代码够良心。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    node *p, *ch[<span class="number">2</span>];</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">int</span> col;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">flag</span><span class="params">()</span> </span>&#123;<span class="keyword">return</span> p-&gt;ch[<span class="number">1</span>] == <span class="keyword">this</span>;&#125;</span><br><span class="line">    node(node *, <span class="built_in">std</span>::<span class="built_in">string</span>, <span class="keyword">int</span>);</span><br><span class="line">&#125; *root, *null;</span><br><span class="line">node::node(node *p, <span class="built_in">std</span>::<span class="built_in">string</span> s, <span class="keyword">int</span> c) : p(p), s(s), col(c) &#123;ch[<span class="number">0</span>] = ch[<span class="number">1</span>] = null;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Rotate</span><span class="params">(node *y)</span> </span>&#123;</span><br><span class="line">    node *x = y-&gt;p;</span><br><span class="line">    <span class="keyword">int</span> f = !y-&gt;flag();</span><br><span class="line">    <span class="keyword">if</span> (x == root) (root = y)-&gt;p = null;</span><br><span class="line">    <span class="keyword">else</span> (x-&gt;p-&gt;ch[x-&gt;flag()] = y)-&gt;p = x-&gt;p;</span><br><span class="line">    (x-&gt;ch[!f] = y-&gt;ch[f])-&gt;p = x;</span><br><span class="line">    (y-&gt;ch[f] = x)-&gt;p = y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FixUp</span><span class="params">(node *x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (; !x-&gt;p-&gt;col; x = x-&gt;p-&gt;p) &#123;</span><br><span class="line">        <span class="keyword">int</span> f = x-&gt;p-&gt;flag();</span><br><span class="line">        <span class="keyword">if</span> (!x-&gt;p-&gt;p-&gt;ch[!f]-&gt;col) &#123;</span><br><span class="line">            x-&gt;p-&gt;col ^= <span class="number">1</span>;</span><br><span class="line">            x-&gt;p-&gt;p-&gt;col ^= <span class="number">1</span>;</span><br><span class="line">            x-&gt;p-&gt;p-&gt;ch[!f]-&gt;col ^= <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (x-&gt;flag() != f) Rotate(x);</span><br><span class="line">            <span class="keyword">else</span> x = x-&gt;p;</span><br><span class="line">            x-&gt;col ^= <span class="number">1</span>;</span><br><span class="line">            x-&gt;p-&gt;col ^= <span class="number">1</span>;</span><br><span class="line">            Rotate(x);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    root-&gt;col = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(node *&amp;x, node *p, <span class="built_in">std</span>::<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == null) FixUp(x = <span class="keyword">new</span> node(p, s, <span class="number">0</span>));</span><br><span class="line">    <span class="keyword">else</span> Insert(x-&gt;ch[s &gt;= x-&gt;s], x, s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Inorder</span><span class="params">(node *x)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; x-&gt;s &lt;&lt; (x-&gt;col ? <span class="string">":black"</span> : <span class="string">":red"</span>) &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">if</span> (x-&gt;ch[<span class="number">0</span>] != null) Inorder(x-&gt;ch[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">if</span> (x-&gt;ch[<span class="number">1</span>] != null) Inorder(x-&gt;ch[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Find</span><span class="params">(node *x, <span class="built_in">std</span>::<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (s == x-&gt;s || x == null) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> Find(x-&gt;ch[s &gt;= x-&gt;s], s) + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    root = null = <span class="keyword">new</span> node(<span class="number">0</span>, <span class="built_in">std</span>::<span class="built_in">string</span>(<span class="string">""</span>), <span class="number">1</span>);</span><br><span class="line">    null-&gt;p = null-&gt;ch[<span class="number">0</span>] = null-&gt;ch[<span class="number">1</span>] = null;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">std</span>::<span class="built_in">string</span> s; n; --n)</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; s, Insert(root, null, s);</span><br><span class="line">    Inorder(root);</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">std</span>::<span class="built_in">string</span> s; m; --m)</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; s, <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; Find(root, s) &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全日制本科学生发展测评表测评细则</title>
      <link href="/18.06.23/"/>
      <url>/18.06.23/</url>
      
        <content type="html"><![CDATA[<p>适用范围：我班的每一次评测。</p><h1 id="1-互评得分"><a href="#1-互评得分" class="headerlink" title="1 互评得分"></a>1 互评得分</h1><p>原互评得分 = 20 × (该生得票数 / 班级总人数)。</p><p>互评得分 = 原互评得分 × (8 / 20) + 12 = 得票数 / 总人数 × 8 + 12。</p><h1 id="2-测评组打分"><a href="#2-测评组打分" class="headerlink" title="2 测评组打分"></a>2 测评组打分</h1><p>分两级，A 级约一半，17-19 分；B 级约一半，14-16 分。</p><p>评测组共同打分（14-19 分），取平均值。</p><h1 id="3-加分项"><a href="#3-加分项" class="headerlink" title="3 加分项"></a>3 加分项</h1><p>基本参考绿本子上的条例。</p><p>讲座一个 0.5 分。</p><p>校级活动参与加 1 分，得奖额外加分。</p><p>ACM除活动参与分 2 分之外，铜奖 +2，银奖 +3，金奖 +4。</p><p>同类活动取最高。</p><h1 id="4-总得分"><a href="#4-总得分" class="headerlink" title="4 总得分"></a>4 总得分</h1><p>min(基准分 60 + 互评得分 + 测评组打分 + 加分项 - 减分项, 100)。</p><p>保留小数点后 1 位，四舍五入。</p><h1 id="5-等级"><a href="#5-等级" class="headerlink" title="5 等级"></a>5 等级</h1><p>分数前 40% 为优秀，其余为良好。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 信息 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3月30日干部例会总结通知</title>
      <link href="/18.03.30/"/>
      <url>/18.03.30/</url>
      
        <content type="html"><![CDATA[<p>四月重要活动<br>请务必注意<strong>考评活动（清明放假前上交绿本子）</strong></p><h1 id="事项一：团组织生活与班会筹备"><a href="#事项一：团组织生活与班会筹备" class="headerlink" title="事项一：团组织生活与班会筹备"></a>事项一：团组织生活与班会筹备</h1><p>四/五月有一次团日活动由学校限定，我班主题为“学习新宪法，奋进新时代”（策划案需在4.10号前交到PU平台）。在此期间1-5班各会有一次主题（又红又专）团组织生活，到时候会通知大家时间地点，都可以参与。</p><h1 id="事项二：五四评优"><a href="#事项二：五四评优" class="headerlink" title="事项二：五四评优"></a>事项二：五四评优</h1><p>集体评优，班委负责在清明节完工。<br>个人评优（优秀团员）：待通知，到时候大家申报并公示，最后每个班报上去一个左右。<br>个人评优的另一种方式：自评为 INJU XX 之星，待学校审核通过即可。</p><h1 id="事项三：上学期日常考评"><a href="#事项三：上学期日常考评" class="headerlink" title="事项三：上学期日常考评"></a>事项三：上学期日常考评</h1><p>现在启动上学期的日常考评。请大家最好在周末前按上学期要求填写<strong>评测本（绿本子）</strong>，并准备相应的佐证材料，在<strong>4月4日周三（清明放假前）交</strong>与团支书/班长，过期不候。如果对内容填写有任何疑问，可以在班群里询问。请将上学期获得的<strong>所有</strong>奖项，参与的<strong>所有</strong>活动一并填写，希望大家认真对待。</p><h1 id="事项四：其他通知"><a href="#事项四：其他通知" class="headerlink" title="事项四：其他通知"></a>事项四：其他通知</h1><p>1、朋辈导师现在不按宿舍划分了，而是以20人资源库的形式供全年级学生咨询。4月份会有每位学长学姐的微展示，随时可以按照他们擅长的领域向任何人提问。他们也会就自己感兴趣的方向来参与我们的团生班会。<br>2、对学习、生活、计科有意见或想法的可以向我们班权益委员殷兆恒同学反应，由他向系里反馈。<br>3、4月中旬将有职业规划大赛，每位同学必须参加。到时会有相应讲座。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 信息 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于学术导师制度的一些问题</title>
      <link href="/18.03.14/"/>
      <url>/18.03.14/</url>
      
        <content type="html"><![CDATA[<p>为了了解学术导师制度，我们昨天中午去咨询了拔尖计划的负责人钱柱中老师，下面是谈话的总结。</p><h1 id="1-如何加入该制度？"><a href="#1-如何加入该制度？" class="headerlink" title="1 如何加入该制度？"></a>1 如何加入该制度？</h1><p>可能不会统一安排时间进行导师选择。只要个人能力足够，随时可以自行向导师发邮件，自我介绍表明自己的想法。直接发邮件说明即可，老师们都知道这个制度。老师一般不会拒绝你，但不回邮件的话就算了。<br>　<br>一般选择导师的时间在大二，可以对计算机学科有更深的了解。通常情况下是大二上学期结束的时候确定，然后大二下学期开始。（前几届都安排的是大二）<br>　<br>如果觉得老师的研究方向或者指导方式不适合自己的话也可以更换，但是最好不要很频繁。</p><h1 id="2-如何选择导师？"><a href="#2-如何选择导师？" class="headerlink" title="2 如何选择导师？"></a>2 如何选择导师？</h1><p>首先是出于自己的兴趣，尽量了解导师的研究方向自己感不感兴趣。可能大多数同学对研究只是知道皮毛，这没有关系。如果日后发现不合适，还有重新选择的机会。<br>　<br>按照钱老师的意见，选择导师主要有两方面的考量。<br>一是考虑导师的学术水平，一个学术水平高的导师可以给予你更多的机会和帮助。但是尽量不要选择太大牌的老师，因为那些老师可能会太忙而没有时间管你。也不建议选基本不搞科研，而是搞应用或者专心教学的老师。<br>二是看老师的教学方式。理论上来说，导师的任务是引导我们了解科研，但有的老师可能直接把我们扔到组里跟着学长学姐一起做，不是说这样的方式不好，看自己适合什么。有些老师可能会专注于自己的研究生博士生教学，对本科生不会太关注。<br>　<br>了解老师的方式大概有：看实验室或老师的个人主页、看看他们最近的研究方向和论文，询问学长学姐。（钱老师说论文质量可以参考 CCF 的 ABC 评级，一般 A&gt;B&gt;C&gt;NULL，会议&gt;期刊）</p><h1 id="3-选择好导师之后我们可以做什么？"><a href="#3-选择好导师之后我们可以做什么？" class="headerlink" title="3 选择好导师之后我们可以做什么？"></a>3 选择好导师之后我们可以做什么？</h1><p>当我们选择了一个导师之后，导师可能会邀请我们参加组会，会给我们布置一些论文阅读任务或者参加他们的科研任务。我们需要做的是定期（大概一个星期一次）主动和导师联系，因为一般老师不会主动找我们（当然不排除会有一些非常积极的老师）。从往届的情况来看，一般会有 1/3 受益匪浅，1/3 得过且过，1/3 不了了之。<br>　<br>按照老师的说法，他们期望学术导师能引导我们的学习，提供一个答疑的机会。但实际上可能有些导师不会有这么多时间，所以如果导师对自己不太关注也不要抱怨，导师也很忙。</p><h1 id="4-这个制度可以给我们带来什么？"><a href="#4-这个制度可以给我们带来什么？" class="headerlink" title="4 这个制度可以给我们带来什么？"></a>4 这个制度可以给我们带来什么？</h1><p>钱老师希望这种导师制度可以让本科生尽快接触科研——等到研究生就晚了。在参与导师的科研活动的过程中我们可以了解到科研做的事情是什么，了解他们的研究方向。有时可以跟着导师参加各种学术会议，对拓宽自己的视野有很大的帮助。</p><h1 id="附：一些实验室的主页"><a href="#附：一些实验室的主页" class="headerlink" title="附：一些实验室的主页"></a>附：一些实验室的主页</h1><ul><li><a href="https://cs.nju.edu.cn" target="_blank" rel="noopener">系主页</a></li><li><a href="http://keysoftlab.nju.edu.cn/" target="_blank" rel="noopener">SKL 计算机软件新技术国家重点实验室</a></li><li><a href="http://moon.nju.edu.cn/" target="_blank" rel="noopener">ICS 计算机软件研究所</a><ul><li><a href="http://www.bigoh.net/wiki" target="_blank" rel="noopener">DIS-ALG: Distributed-Algorithm</a></li><li><a href="http://moon.nju.edu.cn/dse/" target="_blank" rel="noopener">DSE: Dynamic Software Evolution</a></li><li><a href="http://moon.nju.edu.cn/spar/" target="_blank" rel="noopener">SPAR: System and Program Analysis</a></li></ul></li><li><a href="http://lamda.nju.edu.cn" target="_blank" rel="noopener">LAMDA 机器学习与数据挖掘研究所</a></li><li><a href="http://dislab.nju.edu.cn/" target="_blank" rel="noopener">DISLAB 分布式计算实验室</a></li><li><a href="http://cosec.nju.edu.cn/" target="_blank" rel="noopener">COSEC 网络合作与安全研究组</a></li><li><a href="http://mcg.nju.edu.cn/" target="_blank" rel="noopener">MCG 媒体计算研究组</a></li><li><a href="http://cs.nju.edu.cn/lutong/" target="_blank" rel="noopener">IMAGINE 媒体智能感知与内容理解研究组</a></li><li><a href="http://cs.nju.edu.cn/rinc" target="_blank" rel="noopener">RINC 机器人智能与神经计算研究组</a></li><li><a href="http://nlp.nju.edu.cn/" target="_blank" rel="noopener">NLP 自然语言处理研究组</a></li><li><a href="http://iip.nju.edu.cn" target="_blank" rel="noopener">IIP 智能信息处理研究组</a></li><li><a href="http://cs.nju.edu.cn/rl" target="_blank" rel="noopener">R&amp;L 推理与学习研究组</a></li><li><a href="http://pasa-bigdata.nju.edu.cn/" target="_blank" rel="noopener">PASA 大数据技术实验室</a></li><li><a href="http://ws.nju.edu.cn/?lang=chinese" target="_blank" rel="noopener">Websoft 万维网软件研究组</a></li><li><a href="http://seg.nju.edu.cn/" target="_blank" rel="noopener">SEG 软件工程组</a></li><li><a href="http://jisq.nju.edu.cn/" target="_blank" rel="noopener">软件质量研究所</a></li><li><a href="http://tcs.nju.edu.cn/" target="_blank" rel="noopener">理论计算机科学</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 信息 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法题常见错误汇总</title>
      <link href="/18.01.18/"/>
      <url>/18.01.18/</url>
      
        <content type="html"><![CDATA[<p>持续更新 &amp; 欢迎疯狂评论补充<br>　<br>还可以看知乎问题 <a href="https://www.zhihu.com/question/64013739" target="_blank" rel="noopener">你在做算法题时遇到过哪些蜜汁错误？</a>  </p><h1 id="智障型错误"><a href="#智障型错误" class="headerlink" title="智障型错误"></a>智障型错误</h1><p>1、<code>m</code> 写成 <code>n</code>，<code>i</code> 写成 <code>j</code>，<code>v</code> 写成 <code>w</code>，<code>head</code> 写成 <code>tail</code><br>2、<code>&lt;</code> 写成 <code>&gt;</code>，<code>&lt;=</code> 写成 <code>&lt;</code><br>3、<code>int main()</code> 写成 <code>int mian()</code><br>4、<code>scanf</code> 与 <code>&amp;</code> （一般除了读字符数组都要加 <code>&amp;</code>（这个不加会报 warning<br>5、输出 <code>YES</code> 还是 <code>Yes</code> 还是 <code>yes</code><br>6、有的题目不忽略结尾的空格和回车  </p><h1 id="初学型错误"><a href="#初学型错误" class="headerlink" title="初学型错误"></a>初学型错误</h1><p>1、不写 <code>using namespace std;</code> 还不写 <code>std::</code>（私人建议不要 <code>using namespace std;</code><br>2、忘了赋初始值、忘了清空数组<br>3、数组越界 &amp; <strong>循环边界判断</strong><br>4、如何正确读入字符 &amp; 字符串（参考上一篇题解  </p><h1 id="老司机也会挂"><a href="#老司机也会挂" class="headerlink" title="老司机也会挂"></a>老司机也会挂</h1><p>1、数组开小 or 开爆 （char &amp; bool : 1 byte，int : 4 byte，long long : 8 byte，128M 可以开下 33554432 个 int<br>2、看数据范围开 <code>long long</code>（<code>int</code> 最大 2147483647<br>3、<code>int * int</code> 赋值给 <code>long long</code> 的时候可能要强制转换<br>4、<a href="http://zh.cppreference.com/w/cpp/language/operator_precedence" target="_blank" rel="noopener">运算符优先级</a><br>比如加减乘除优先于左移右移（可以 <code>mid = l + r &gt;&gt; 1</code><br>比较优先于位运算（不可以 <code>if (x &amp; 1 == 0)</code><br>5、STL 从 0 开始存<br>6、计算几何考虑除以 0<br>7、浮点数精度<br>8、<code>if else</code> 和 <code>{}</code><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (x) &#123;</span><br><span class="line"><span class="keyword">if</span> (y) f1();</span><br><span class="line">&#125; <span class="keyword">else</span> f2();</span><br></pre></td></tr></table></figure></p><p>为了省括号写成了<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(x)</span><br><span class="line"><span class="keyword">if</span> (y) f1();</span><br><span class="line"><span class="keyword">else</span> f2();</span><br></pre></td></tr></table></figure></p><h1 id="操作系统-amp-编译器不兼容"><a href="#操作系统-amp-编译器不兼容" class="headerlink" title="操作系统&amp;编译器不兼容"></a>操作系统&amp;编译器不兼容</h1><p>1、没有 <code>#include &lt;cstring&gt;</code> 然后 <code>memset</code>（Win 可以编译过，Linux 会 CE<br>2、保留字，如 <code>pipe</code>、<code>time</code>（Win 可以编译过，Linux 会 CE<br>3、<code>%lld</code> 与 <code>%I64d</code></p><h1 id="初学者的建议"><a href="#初学者的建议" class="headerlink" title="初学者的建议"></a>初学者的建议</h1><p>1、认真阅读题意，看清数据范围<br>2、不要轻信样例，样例一遍很水，而且不包含特殊情况。如果 WA 了就自己造数据跑。<br>3、学会计算时间复杂度，1s 大概可以跑 500,0000<br>4、学会调试，如 gdb，或 IDE 自带调试，或 输出调试<br>5、写完题可以看看别人的代码，有时候可以学到一些有趣的 tips 以及代码风格。有的 OJ 可以看代码（UOJ、LOJ、51nod、COGS、luogu 等），或者网上可以搜到很多人的题解。<br>6、参考 <a href="http://zh-google-styleguide.readthedocs.io/en/latest/google-cpp-styleguide/contents/" target="_blank" rel="noopener">Google 开源项目 C++ 风格指南</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2017 问题求解一 期末考试</title>
      <link href="/18.01.04/"/>
      <url>/18.01.04/</url>
      
        <content type="html"><![CDATA[<p>关于字符串的读入：（以下<code>c</code>表示字符，<code>s</code>表示字符串）<br>1、读入一个字符：<code>getchar(c);</code> <code>scanf(&quot;%c&quot;, &amp;c);</code><br>2、读入一个字符（跳过空格和回车）：<code>cin&gt;&gt;c;</code><br>（注：如果读入字符前后已知有空格，比如第一题里的操作符，那么可以<code>scanf(&quot;%s&quot;, s);</code> 然后用<code>s[0]</code><br>3、读入一串字符（到空格和回车停止）：<code>cin&gt;&gt;s;</code> <code>scanf(&quot;%s&quot;, s);</code><br>4、读入一行字符（到回车停止）：<code>gets(s);</code> <code>cin.getline(s, 1005, &#39;\n&#39;);</code> <code>fgets(s, 1005, stdin);</code><br>（注：读入一行字符串时，需要先把上一行（如果有读入数字啥的）结尾的换行符吃掉。可以直接先读一行或者<code>while(c!=&#39;\n&#39;) c=getchar();</code><br>（注：<code>gets()</code>由于缓冲区溢出漏洞，被c11废除<br>（注：<code>fgets()</code>会把回车也读进去<br>　<br>（注：Windows里的换行符是<code>&#39;\n&#39;</code>，OS X里的换行符是<code>&#39;\r&#39;</code>，Linux里是<code>&#39;\n&#39;</code>和<code>&#39;\r&#39;</code><br>（当然你愿意特判的话也可以全部<code>getchar()</code>  </p><h1 id="1360-Problem-A-项链"><a href="#1360-Problem-A-项链" class="headerlink" title="1360 Problem A 项链"></a><a href="http://114.212.10.47:8084/problem.php?id=1360" target="_blank" rel="noopener">1360 Problem A 项链</a></h1><blockquote><p>MJ很喜欢用彩色珠子做的项链。他制作项链包括以下两个基本操作：<br>A i C：在位置 i 插入颜色为 C ( 颜色用大写字母表示 ) 的珠子；<br>D i： 去掉在位置 i 的珠子；<br>S i j：交换位置 i,j 的珠子 ( i,j 可能相同，大小关系任意 ) ；<br>P：查看当前项链状态；<br>例如，下面操作序列将得到项链“BA”<br>A 0 A<br>A 0 B<br>再继续执行下列操作之后，将得到项链“CDA”<br>D 0<br>A 0 C<br>A 1 D<br>在执行下列操作，最终得到项链“ADC”<br>S 0 2  </p></blockquote><p>暴力，插入和删除就把后面的全都移一位<br>　<br>时间复杂度：<br>插入、删除、打印：O(n)<br>交换：O(1)<br>　<br>我考场上用的是vector，理论时间复杂度一样<br>　<br>log复杂度大概可以平衡树（手动滑稽</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> T, n, a[<span class="number">3005</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Add</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> pos;</span><br><span class="line"><span class="keyword">char</span> val[<span class="number">5</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%s"</span>, &amp;pos, val);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = n++; i &gt; pos; i--)</span><br><span class="line">a[i] = a[i - <span class="number">1</span>];</span><br><span class="line">a[pos] = val[<span class="number">0</span>] - <span class="string">'A'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> pos;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;pos);</span><br><span class="line">n--;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = pos; i &lt; n; i++)</span><br><span class="line">a[i] = a[i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Swap</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;x, &amp;y);</span><br><span class="line"><span class="built_in">std</span>::swap(a[x], a[y]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Print</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>, a[i] + <span class="string">'A'</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T); T; T--) &#123;</span><br><span class="line"><span class="keyword">char</span> opt[<span class="number">5</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, opt);</span><br><span class="line"><span class="keyword">if</span> (opt[<span class="number">0</span>] == <span class="string">'A'</span>) Add();</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (opt[<span class="number">0</span>] == <span class="string">'D'</span>) Delete();</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (opt[<span class="number">0</span>] == <span class="string">'S'</span>) Swap();</span><br><span class="line"><span class="keyword">else</span> Print();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T); T; T--) &#123;</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line"><span class="keyword">char</span> opt[<span class="number">5</span>], z[<span class="number">5</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, opt);</span><br><span class="line"><span class="keyword">if</span> (opt[<span class="number">0</span>] == <span class="string">'A'</span>) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%s"</span>, &amp;x, z);</span><br><span class="line">a.insert(a.begin() + x, z[<span class="number">0</span>] - <span class="string">'A'</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (opt[<span class="number">0</span>] == <span class="string">'D'</span>) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">a.erase(a.begin() + x);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (opt[<span class="number">0</span>] == <span class="string">'S'</span>) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;x, &amp;y);</span><br><span class="line"><span class="built_in">std</span>::swap(a[x], a[y]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator iter = a.begin(); iter != a.end(); iter++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>, *iter + <span class="string">'A'</span>);</span><br><span class="line"><span class="comment">//for(int i = 0; i &lt; a.size(); i++) printf("%c", a[i] + 'A'); //和上两行的作用一样</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="1361-Problem-B-括号匹配"><a href="#1361-Problem-B-括号匹配" class="headerlink" title="1361 Problem B 括号匹配"></a><a href="http://114.212.10.47:8084/problem.php?id=1361" target="_blank" rel="noopener">1361 Problem B 括号匹配</a></h1><blockquote><p>判断给定字符串中的括号是否匹配。匹配输出1，否则输出0。<br>每个字符串最多含有 ‘(‘, ‘[‘, ‘{‘, ‘)’, ‘]’, ‘}’ 六种不同字符。<br>规定空字符串是”括号匹配的”。</p></blockquote><p>因为最后忘了判断栈是否为空WA了两发，身败名裂<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> T, n, top, <span class="built_in">stack</span>[<span class="number">1005</span>], a[<span class="number">200</span>];</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">1005</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">DoIt</span><span class="params">()</span> </span>&#123;</span><br><span class="line">gets(s);</span><br><span class="line">n = <span class="built_in">strlen</span>(s);</span><br><span class="line">top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> x = a[s[i]];</span><br><span class="line"><span class="keyword">if</span>(!x) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(x &amp; <span class="number">1</span>) <span class="built_in">stack</span>[++top] = x;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(top &amp;&amp; x - <span class="built_in">stack</span>[top] == <span class="number">1</span>) top--;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> !top;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">a[<span class="string">'('</span>] = <span class="number">1</span>; a[<span class="string">')'</span>] = <span class="number">2</span>;</span><br><span class="line">a[<span class="string">'['</span>] = <span class="number">3</span>; a[<span class="string">']'</span>] = <span class="number">4</span>;</span><br><span class="line">a[<span class="string">'&#123;'</span>] = <span class="number">5</span>; a[<span class="string">'&#125;'</span>] = <span class="number">6</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T), gets(s); T; T--)  <span class="comment">//这个gets为了把第一行的换行符吃掉</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, DoIt());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="1347-Problem-C-“相邻”积"><a href="#1347-Problem-C-“相邻”积" class="headerlink" title="1347 Problem C “相邻”积"></a><a href="http://114.212.10.47:8084/problem.php?id=1347" target="_blank" rel="noopener">1347 Problem C “相邻”积</a></h1><blockquote><p>现有一N行M列的正整数数阵A，找出A中相邻且按同一方向排列（在同一直线上）的4个数，使得它们的乘积K最大。“相邻”定义为：一个数在另一个数的上、下、左、右或对角线的最近位置。<br>比如A为：<br><strong>90</strong>  24  26  33<br>12  <strong>37</strong>  38   1<br>57  28  <strong>91</strong>  42<br>23  11  15  <strong>25</strong><br>主对角线上的4个数相乘可以得到最大积7575750。  </p></blockquote><p>暴力枚举每一个点的每一种方向<br>其中八个方向可以简化为四个，因为从左到右和从右到左是一样的<br>O(n^2*16)<br>　<br>当然常数可以变成4，就是按每个方向扫一遍<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> n, m, ans, a[<span class="number">1005</span>][<span class="number">1005</span>], X[]=&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>&#125;, Y[]=&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i][j]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> t = <span class="number">1</span>; t &lt;= <span class="number">4</span>; t++) &#123;  <span class="comment">//枚举方向</span></span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">1</span>, x = i, y = j;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= <span class="number">4</span>; k++, x += X[t], y += Y[t]) &#123;  <span class="comment">//X和Y数组为方向向量</span></span><br><span class="line"><span class="keyword">if</span>(x &lt; <span class="number">1</span> || x &gt; n || y &lt; <span class="number">1</span> || y &gt; m) <span class="keyword">break</span>;</span><br><span class="line">tot *= a[x][y];</span><br><span class="line">&#125;</span><br><span class="line">ans = <span class="built_in">std</span>::max(ans, tot);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="1362-Problem-D-冒泡排序"><a href="#1362-Problem-D-冒泡排序" class="headerlink" title="1362 Problem D 冒泡排序"></a><a href="http://114.212.10.47:8084/problem.php?id=1362" target="_blank" rel="noopener">1362 Problem D 冒泡排序</a></h1><blockquote><p>请你实现冒泡算法，要求利用递归来替换该算法的外层循环<br>注意从后往前排</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> n, a[<span class="number">1001</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs</span><span class="params">(<span class="keyword">int</span> st)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(st == n) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = n; i &gt; st; i--)</span><br><span class="line"><span class="keyword">if</span>(a[i] &gt; a[i - <span class="number">1</span>]) <span class="built_in">std</span>::swap(a[i], a[i - <span class="number">1</span>]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">return</span> Dfs(st + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">Dfs(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“计科竞赛一览”主题团生</title>
      <link href="/17.12.12/"/>
      <url>/17.12.12/</url>
      
        <content type="html"><![CDATA[<p>具体 PPT 和资料都在班群里</p><h1 id="1-算法类"><a href="#1-算法类" class="headerlink" title="1 算法类"></a>1 算法类</h1><p>主要分为 <a href="https://icpc.baylor.edu/" target="_blank" rel="noopener">ACM/ICPC</a> 和 <a href="http://ccpc.io/" target="_blank" rel="noopener">CCPC</a></p><h2 id="简要规则"><a href="#简要规则" class="headerlink" title="简要规则"></a>简要规则</h2><p>以学校为单位，每队3名队员<br>5 h，8-13 题<br>可以带纸质资料<br>每队 1 台电脑，可以打印代码<br>语言 C、C++、Java<br>实时反馈 AC / WA / TLE / MLE / CE / RE / PE<br>A 掉的题有气球，每题颜色不同<br>排名：先按 AC 的题目，再看罚时<br>罚时计算：AC 的时间之和 + 提交没过的次数 × 20 min (最后没过的题不算)<br>最后一个小时封榜<br>Au 10%，Ag 20%，Cu 30%</p><h2 id="比赛时间（2017-年）"><a href="#比赛时间（2017-年）" class="headerlink" title="比赛时间（2017 年）"></a>比赛时间（2017 年）</h2><ol><li>JSCPC（省赛）：5 月。</li><li>ICPC：8 个赛区（其中上海大学 EC-Final），网络赛 9 月，现场赛 10-12 月周末。World Final 2018 年 4 月。</li><li>CCPC：4 个赛区（哈工大 Final），网络赛 8 月，现场赛 10-12 月周末。</li></ol><p>暑假有集训和多校，平时周末有讨论班。</p><h2 id="关于校内选拔"><a href="#关于校内选拔" class="headerlink" title="关于校内选拔"></a>关于校内选拔</h2><p>我也不知道，问马骏老师（/笑哭）</p><h2 id="自学-ACM"><a href="#自学-ACM" class="headerlink" title="自学 ACM"></a>自学 ACM</h2><p>C / C++<br>刘汝佳《算法竞赛入门经典》（强烈推荐）《算法竞赛入门经典：训练指南》<br>《算法导论》<br>按照知识点搜博客自己学（题解推荐 hzwer.com）<br>在 OJ 上刷题</p><h2 id="OJ"><a href="#OJ" class="headerlink" title="OJ"></a>OJ</h2><ol><li><a href="http://train.usaco.org/" target="_blank" rel="noopener">USACO Training pages</a><br>题库共有 6 个 chapter，每一个 chapter 中一般有 4~5 个 section，每一个 section 集中介绍某一类型的试题，一般会有一篇算法介绍，然后有 4~5 道试题。</li><li>国外 OJ<br><a href="https://www.topcoder.com/" target="_blank" rel="noopener">Topcoder</a>（<a href="http://acmicpc.info/archives/164" target="_blank" rel="noopener">介绍</a>）、<a href="http://codeforces.com/" target="_blank" rel="noopener">Codeforces</a>（<a href="https://www.douban.com/review/5800694/" target="_blank" rel="noopener">介绍</a>）、<a href="http://atcoder.jp/" target="_blank" rel="noopener">AtCoder</a>（前面三个平常很多比赛）、<a href="https://uva.onlinejudge.org/" target="_blank" rel="noopener">UVa OJ</a></li><li>国内 ACM OJ<br><a href="http://acm.hdu.edu.cn/" target="_blank" rel="noopener">HDU</a>（杭电）、<a href="http://poj.org/" target="_blank" rel="noopener">POJ</a>（北大）、<a href="http://acm.zju.edu.cn/onlinejudge/" target="_blank" rel="noopener">ZOJ</a>（浙大）、<a href="https://vjudge.net/" target="_blank" rel="noopener">Virtual Judge</a>（可以交很多 OJ 的题）</li><li>国内 OI OJ<br><a href="http://uoj.ac/" target="_blank" rel="noopener">UniversalOJ</a>、<a href="https://loj.ac/" target="_blank" rel="noopener">LibreOJ</a>（前面两个比较自由(现代)）、<a href="http://www.lydsy.com/JudgeOnline/" target="_blank" rel="noopener">BZOJ</a>（题目非常多）、<a href="http://cogs.pro:8080/cogs/" target="_blank" rel="noopener">COGS</a>（题目比较多、不太稳定）、<a href="http://www.codevs.cn/" target="_blank" rel="noopener">CodeVS</a>、<a href="https://www.luogu.org/" target="_blank" rel="noopener">洛谷</a>、<a href="https://vijos.org/" target="_blank" rel="noopener">Vijos</a>（前面三个非常。。小学生，适合初学者）</li><li>其他<br><a href="https://www.51nod.com/" target="_blank" rel="noopener">51nod</a>（主要是算法）、<a href="https://www.jisuanke.com/" target="_blank" rel="noopener">计蒜客</a>（主要是商业课程）、<a href="https://www.nowcoder.com/acm/contest/vip-index" target="_blank" rel="noopener">牛客</a>（主要是找工作）</li></ol><h2 id="商业竞赛"><a href="#商业竞赛" class="headerlink" title="商业竞赛"></a>商业竞赛</h2><p><a href="https://www.topcoder.com/community/member-programs/topcoder-open/" target="_blank" rel="noopener">Topcoder Open 2017</a>：各种方向都有<br><a href="https://code.google.com/codejam/" target="_blank" rel="noopener">Google Code Jam</a> (<a href="https://code.google.com/codejam/resources/quickstart-guide" target="_blank" rel="noopener">指南</a>)：算法<br><a href="https://www.facebook.com/hackercup/" target="_blank" rel="noopener">Facebook Hacker Cup</a> (<a href="https://www.facebook.com/notes/1029173677098533/" target="_blank" rel="noopener">FAQ</a>)：算法<br><a href="http://studentclub.msra.cn/bop2017/" target="_blank" rel="noopener">微软编程之美挑战赛</a>：去年是自然语言处理<br><a href="https://imagine.microsoft.com/zh-cn/" target="_blank" rel="noopener">Imagine Cup 微软“创新杯”全球学生科技大赛</a> (<a href="https://www.microsoft.com/china/msdn/student/IC2017/dsjj.html" target="_blank" rel="noopener">中国区</a>)：开发应用程序<br>　<br><a href="http://astar2017.baidu.com/index/programmer" target="_blank" rel="noopener">Astar 百度之星·程序设计大赛</a>：算法<br><a href="https://www.nowcoder.com/activity/2017codem/index" target="_blank" rel="noopener">CodeM 美团点评编程大赛</a>：算法<br><a href="https://www.nowcoder.com/activity/iqiyi2017" target="_blank" rel="noopener">爱奇艺全国高校技术大赛</a>：算法 or 应用<br><a href="https://dao.jisuanke.com/" target="_blank" rel="noopener">计蒜之道</a>：初赛 算法，决赛 AI<br><a href="http://codecraft.huawei.com/" target="_blank" rel="noopener">华为软件精英挑战赛</a>：解决实际问题的模型</p><h1 id="2-数学建模类"><a href="#2-数学建模类" class="headerlink" title="2 数学建模类"></a>2 数学建模类</h1><h2 id="黄卫华教授"><a href="#黄卫华教授" class="headerlink" title="黄卫华教授"></a>黄卫华教授</h2><p>要求（国赛）：需要数学和计算机两门学科最高一次考试成绩达到85（具体见报名通知时的细则）<br>　<br>校内集训：暑假的头两周(可能与小学期有冲突)。如果通过选拔，将持续培训到比赛前。<br>　<br>需要自行学习概率统计、线性代数、线性规划（不在教学计划内)；数据分析软件（如matlab）等内容。推荐书籍是叶其孝主编的《大学生数学建模竞赛辅导教材》系列共5本，在图书馆数量多极易借。<br>　<br>一方面，竞赛希望的是大家提前学习。但另一方面，要先学好自己的课程。数模培养的数学建模能力和团队协作等能力，是相当重要的。</p><h2 id="谢旻晖学长-PPT-摘要"><a href="#谢旻晖学长-PPT-摘要" class="headerlink" title="谢旻晖学长 PPT 摘要"></a>谢旻晖学长 PPT 摘要</h2><ol><li><p>数学建模<br>将实际问题变成数学问题。首先需要用数学语言来描述实际问题，将它变成一个数学问题，利用现成的数学工具或发展新的数学工具来加以解决。<br>　<br>分为 CUMCM（国赛）和 MCM/ICM（美赛）</p></li><li><p>赛题<br>竞赛的题目一般来源于工程技术和管理科学邻域经过简化的实际问题，不要求预先掌握深入的数学方面的专门知识，具有较大的灵活性供参赛者发挥创造能力。竞赛采用开卷形式，三名学生组成一队，可以使用任何资料、计算机、软件和互联网（但是不允许与队外任何人包括指导教师讨论），在三天内从两个赛题中择一完成一篇论文。<br>　<br>评比标准：假设的合理性、建模的创造性、结果的正确性和表述的清晰性。</p></li><li><p>需要的知识<br>数学知识的应用能力：微积分、线性代数、概率论和数理统计、运筹与线性规划、微分方程还有与计算机知识相交叉的知识<br>　<br>计算机的运用能力：Matlab、Python、Mathematica、Maple、Lingo<br>　<br>论文的写作能力：LaTeX</p></li><li><p>阵容选择<br>数学建模竞赛不是一个人能够独自完成的，它需要3个人相互合作，往往团队合作能力决定你竞赛的成败。3个人最好都能都了解建模、编程和写作，然后再发挥每个人的特长。</p></li><li><p>2018美赛<br>MCM will take place February 8 - 12, 2018<br><a href="http://www.comap.com/undergraduate/contests/mcm/" target="_blank" rel="noopener">http://www.comap.com/undergraduate/contests/mcm/</a></p></li></ol><h1 id="3-机器学习与数据挖掘类"><a href="#3-机器学习与数据挖掘类" class="headerlink" title="3 机器学习与数据挖掘类"></a>3 机器学习与数据挖掘类</h1><h2 id="俞杨老师"><a href="#俞杨老师" class="headerlink" title="俞杨老师"></a>俞杨老师</h2><p>竞赛就是为了拿第一。竞赛主要看兴趣，有兴趣什么时候开始都可以（进lamda 也是，主要看积极性和兴趣）。不需要有太多的知识储备，可以边打边学。<br>　<br>每天最好能有4 小时做这个竞赛的时间。一般每学期有一次，一次周期3 个月。<br>　<br>通过看书自学，一星期可以学到一学期课的内容。<br>　<br>想参加数据挖掘竞赛，可以先看周志华的《机器学习》。一些网络上的课程也可以看。<br>　<br>有兴趣的同学可以进交流群684871210，一起学习《机器学习》。<br>　<br>想打的话可以找几个同学自己练，也可以联系我。<br>　<br>再加一句：没有兴趣（我们认为的潜台词：不行）就不要来了。<br>　<br>　<br>微软俱乐部技术讲座：需要有线性代数、概率论与数理统计的基础，掌握python 或matlab<br>　<br>《机器学习》观感：内容可以理解，但操作起来应该很难。<br>　<br>KDD、Kaggle、天池大数据竞赛、泰迪杯全国大学生数据挖掘竞赛、DataCastle</p><h1 id="4-信息安全类"><a href="#4-信息安全类" class="headerlink" title="4 信息安全类"></a>4 信息安全类</h1><h2 id="CTF-Capture-The-Flag"><a href="#CTF-Capture-The-Flag" class="headerlink" title="CTF : Capture The Flag"></a>CTF : Capture The Flag</h2><p>系列比赛。本质是一个黑客比赛。解题模式与攻防模式。<br>　<br>基本知识：计算机网络、计算机组成、汇编、Linux 基础<br>　<br>竞赛知识点：Web 渗透、密码学、杂项、反汇编、隐写术、基本编程、PWN、综合渗透<br>　<br>学习渠道：安全信息协会(每周六晚6：30 基础实验楼乙区223)；网络资源（学长推荐上知乎看看怎么准备）　</p><h2 id="全国大学生信息安全竞赛"><a href="#全国大学生信息安全竞赛" class="headerlink" title="全国大学生信息安全竞赛"></a>全国大学生信息安全竞赛</h2><p>各高校组织、学生，以队为单位参赛，每队不超过4 人(包含组长)。<br>大赛题目一般是工程技术中适当简化过的实际问题，涉及密码算法、安全芯片、防火墙、入侵检测系统、电子商务与电子政务系统安全、VPN、计算机病毒防护等，但不限于以上内容</p><h1 id="5-项目开发类"><a href="#5-项目开发类" class="headerlink" title="5 项目开发类"></a>5 项目开发类</h1><h2 id="花旗杯"><a href="#花旗杯" class="headerlink" title="花旗杯"></a>花旗杯</h2><p>一个金融+互联网信息的竞赛（金融专业与软件工程专业组队），计算机的负责开发 web 端或 app 端<br>　<br>建议（面向金融）：好好学习；尽早熟练掌握至少一门编程语言；建模、创新项目<br>　<br>六月份：软院双选会（大二下期末前）；选题决定于老师；大二寒假或暑假；合理分工；团队之间多沟通；认真踏实地把产品实现</p><h2 id="中国软件杯"><a href="#中国软件杯" class="headerlink" title="中国软件杯"></a>中国软件杯</h2><h2 id="蓝桥杯"><a href="#蓝桥杯" class="headerlink" title="蓝桥杯"></a>蓝桥杯</h2><h2 id="黑客马拉松-Hackathon"><a href="#黑客马拉松-Hackathon" class="headerlink" title="黑客马拉松 Hackathon"></a>黑客马拉松 Hackathon</h2><h1 id="6-总结"><a href="#6-总结" class="headerlink" title="6 总结"></a>6 总结</h1><p>积极参加，既可以了解相关领域知识，也可以提高自身能力<br>　<br>取舍有度，要保证校内课程的高质量学习，不要太早参加一些需要很多基础的竞赛<br>　<br>发现感兴趣：查看相关的详细文档<br>　<br>想要参加：联系相关老师，加入班级竞赛小组或学校团体<br>　<br>关注官网：比赛时间内容发布<br>　<br>　<br>QQ 群<br>校 ACM 讨论小组 : 273975032，班级 ACM 讨论小组 : 633193843<br>校数模 : 473676111，班级数模讨论小组 : 684870990<br>机器学习学习组 : 684871210<br>校信息安全协会 : 679399677<br>花旗杯咨询 : 584018185</p>]]></content>
      
      
      
        <tags>
            
            <tag> 班会&amp;团生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“秋游栖霞山”活动策划方案</title>
      <link href="/17.11.17/"/>
      <url>/17.11.17/</url>
      
        <content type="html"><![CDATA[<p><del>（前三条太长可以不看，不过欢迎大家欣赏姜勇刚同学的文采）</del></p><h1 id="一、概况"><a href="#一、概况" class="headerlink" title="一、概况"></a>一、概况</h1><p>活动形式：秋游<br>活动地点：栖霞山<br>活动时间：11月18号周六<br>活动对象：17级计算机类6班全体同学  </p><h1 id="二、活动背景"><a href="#二、活动背景" class="headerlink" title="二、活动背景"></a>二、活动背景</h1><p>正值深秋之际，南京市栖霞山风景名胜区枫叶进入最佳观赏时期。11月中旬，栖霞山枫叶进入一年中色彩最丰富、镜头感最强的时期，层林尽染，万叶飘丹。此时的17级同学们，刚刚经历了大学以来的第一次考试，结束了半学期的学习，正是身心俱疲之时，却与自然相隔甚久。此刻我们将组织同学们亲近自然，舒缓几个月来紧绷的神经，切身感受一下南京的美丽之处。</p><h1 id="三、活动目的"><a href="#三、活动目的" class="headerlink" title="三、活动目的"></a>三、活动目的</h1><p>增强同学们相互之间的了解，增进同学情谊。舒缓考试学习生活带来的压力，为后续的紧张学习做好准备。亲近自然，增强同学们对自然的了解，感受南京风景，体味南京风韵。</p><h1 id="四、路线"><a href="#四、路线" class="headerlink" title="四、路线"></a>四、路线</h1><p>1、    自行车：出西门直走500m，右转到九乡河西路，一直走到栖霞大道右转，然后左转进栖霞街。（约30min）<br><img src="/images/17.11.17-1.jpg" height="400"><br>2、    公交车：原来是学校东门<strong>326路</strong>公交车坐到终点站，但是公交车上贴了一张纸写18号起从“南京大学仙林校区”站走，应该是南门。（约50min）（车票2元*2）<br>3、    打车。（约30min）  </p><h1 id="五、注意事项"><a href="#五、注意事项" class="headerlink" title="五、注意事项"></a>五、注意事项</h1><p>1、    栖霞山门票40，半价20，请大家带好<strong>学生证</strong>和<strong>零钱</strong>。<br>2、    骑车的同学<strong>13:30</strong>西门口集合，大概<strong>14:10</strong>到栖霞山，请选择其他出行方式的同学注意时间。<br>3、    上山大概是走上面的马路，从中间走应该是寺庙啥的。自行车骑不进去，但是fz老师说里面不是特别远。<br><img src="/images/17.11.17-2.jpg" alt><br>4、    我们集体先照张相，然后进去可以自由活动，但最好<strong>不要单独行动</strong>。手机尽量充好电而且开机响铃，以方便联系，随时看群里的通知。<br>5、    景区17:30关门，但是天黑的比较早，请大家注意时间。<strong>出来到景区门口以及到学校的时候都请跟班长说</strong>（方式可能是在群里投票）。不需要所有人一起回去，但尽量组团。<br>6、    活动结束后请大家尽量把拍的<strong>照片</strong>发给班长几张。<br>7、    若天气不合适，活动将推迟。<br>8、    <strong>一定一定一定要注意安全，不要单独行动！！！</strong>  </p><h1 id="六、一个攻略"><a href="#六、一个攻略" class="headerlink" title="六、一个攻略"></a>六、一个攻略</h1><p><strong>如何上山</strong><br>1、无论哪个方向上山，都要经过栖霞寺，栖霞寺是爬山的起点，也是下山的终点。沿山道往上爬，一边是青锋剑方向，一边是桃花湖方向。<br>2、从栖霞寺左侧，有车道可以上山，直到小营盘附近。路面是铺装路，很平整，人车混杂，注意安全，有一段坡度，注意缓行。<br><strong>美食</strong><br>听说栖霞千佛斋的斋饭很好吃，千佛斋吃斋饭的筒子注意啦，最好在14点之前赶到那里。<br><strong>景区内游程推荐</strong><br>线路A：哼哈殿——彩虹明镜——钟楼－鼓楼——放生池——明征君碑——弥勒殿——祖堂——客堂——毗卢宝殿——舍利塔——千佛岩——飞天壁画——春雨桥——试茶亭——青锋剑——小营盘——话山亭——桃花湖——桃花扇亭——高奇峰墓——返回<br>线路B：北门——彩虹明镜——高奇峰墓——桃花扇亭——桃花湖——话山亭——天开岩——御花园——碧云亭——红叶谷——始皇临江处——太虚亭——小营盘——青锋剑——试茶亭——春雨桥——千佛岩——飞天壁画——舍利塔——寺庙——鼓楼——钟楼——哼哈殿——返回<br><strong>红叶集中处</strong><br>沿着栖霞寺一直往上就是了。桃花扇亭，御花园，红叶谷基本是赏红叶的中心。  </p>]]></content>
      
      
      
        <tags>
            
            <tag> 班会&amp;团生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10月20日干部例会总结通知</title>
      <link href="/17.10.20/"/>
      <url>/17.10.20/</url>
      
        <content type="html"><![CDATA[<ol><li><p>11月起，每月两次班会/团组织生活。全体同学必须参加，考勤记入档案，有事需提交假条。</p></li><li><p>请认真阅读《学生发展评测表》，日常考核和评优等相关，有加分项和减分项。</p></li><li><p>团体辅导：傅忠老师以宿舍为单位展开活动，分六组：按原来分班(寝室)男生五组和女生全体一组。<br>下周一二三(10.23-35)，地点计科楼233；下下周二三四(10.31-11.2)，地点未知。</p></li><li><p>个人谈话：傅忠老师会和每一位同学进行30min以上的个人谈话。这学期不一定轮得到我们班，到时候会组织大家安排时间。</p></li><li><p>以后通知请见班级通知群，小班上课之前也会说，请大家尽量注意各类通知。</p></li><li><p>运动会的时候没有活动的同学安排到看台当观众，需要签到签退，有事需给辅导员请假。<br>运动会期间班长请假，班长相关工作暂时由姜勇刚同学负责。</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 信息 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2017拔尖班编程能力测试</title>
      <link href="/17.09.30/"/>
      <url>/17.09.30/</url>
      
        <content type="html"><![CDATA[<p>代码太丑，请勿吐槽</p><h1 id="问题-A-Sum-of-Numbers"><a href="#问题-A-Sum-of-Numbers" class="headerlink" title="问题 A: Sum of Numbers"></a>问题 A: Sum of Numbers</h1><blockquote><p>输入十个实数，输出正数的和，负数的和，总和，保留两位小数</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">double</span> x, ans1, ans2;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;x);</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">0</span>) ans1 += x;</span><br><span class="line"><span class="keyword">else</span> ans2 += x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2lf,%.2lf,%.2lf"</span>, ans1, ans2, ans1 + ans2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="问题-B-Mad-Lib"><a href="#问题-B-Mad-Lib" class="headerlink" title="问题 B: Mad Lib"></a>问题 B: Mad Lib</h1><blockquote><p>输入a.老师的名字,b.你的名字,c.食物,d.数字,e.形容词,f.颜色,g.动物，输出请假条<br>Dear Instructor [Instructor name],<br>I am sorry that I am unable to turn in my homework at this time. First, I ate a rotten [food], which made me turn [color] and extremely ill. I came down with a fever of [number]. Next, my [adjective] pet [animal] must have smelled the remains of the [food] on my homework, because he ate it. I am currently rewriting my homework and hope you will accept it late.<br>Sincerely,<br> [Your name] </p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> s[<span class="number">10</span>][<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">7</span>; i++) <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Dear Instructor %s,\nI am sorry that I am unable to turn in my homework at this time. First, I ate a rotten %s, which made me turn %s and extremely ill. I came down with a fever of %s. Next, my %s pet %s must have smelled the remains of the %s on my homework, because he ate it. I am currently rewriting my homework and hope you will accept it late.\nSincerely,\n%s"</span>,</span><br><span class="line">s[<span class="number">1</span>], s[<span class="number">3</span>], s[<span class="number">6</span>], s[<span class="number">4</span>], s[<span class="number">5</span>], s[<span class="number">7</span>], s[<span class="number">3</span>], s[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>太长了可读性下降，于是变成了下面的，将就着看吧  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> s[<span class="number">10</span>][<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">7</span>; i++) <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Dear Instructor %s,\nI am sorry that I am unable to turn in my homework at this time. "</span>, s[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"First, I ate a rotten %s, which made me turn %s and extremely ill. "</span>, s[<span class="number">3</span>], s[<span class="number">6</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"I came down with a fever of %s. Next, my %s pet %s must have "</span>, s[<span class="number">4</span>], s[<span class="number">5</span>], s[<span class="number">7</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"smelled the remains of the %s on my homework, because he ate it. "</span>,s[<span class="number">3</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"I am currently rewriting my homework and hope you will accept it late.\nSincerely,\n%s"</span>,s[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="问题-C-Paper-rock-scissor"><a href="#问题-C-Paper-rock-scissor" class="headerlink" title="问题 C: Paper-rock-scissor"></a>问题 C: Paper-rock-scissor</h1><blockquote><p>石头(P)剪刀(R)布(S)，输出结果</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> w[<span class="number">5</span>][<span class="number">5</span>], x, y;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">5</span>], b[<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">w[<span class="number">1</span>][<span class="number">3</span>] = w[<span class="number">3</span>][<span class="number">4</span>] = w[<span class="number">4</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">w[<span class="number">3</span>][<span class="number">1</span>] = w[<span class="number">4</span>][<span class="number">3</span>] = w[<span class="number">1</span>][<span class="number">4</span>] = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s%s"</span>, a, b) != EOF) &#123;</span><br><span class="line"><span class="keyword">if</span>(a[<span class="number">0</span>] &gt;= <span class="string">'a'</span>) x = a[<span class="number">0</span>] - <span class="string">'o'</span>;</span><br><span class="line"><span class="keyword">else</span> x = a[<span class="number">0</span>] - <span class="string">'O'</span>;</span><br><span class="line"><span class="keyword">if</span>(b[<span class="number">0</span>] &gt;= <span class="string">'a'</span>) y = b[<span class="number">0</span>] - <span class="string">'o'</span>;</span><br><span class="line"><span class="keyword">else</span> y = b[<span class="number">0</span>] - <span class="string">'O'</span>;</span><br><span class="line"><span class="keyword">if</span>(x == y) <span class="built_in">printf</span>(<span class="string">"Nobody wins.\n"</span>);</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"User %d wins"</span>, w[x][y]);</span><br><span class="line"><span class="keyword">if</span>(x + y == <span class="number">4</span>) <span class="built_in">printf</span>(<span class="string">"(Paper covers rock).\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x + y == <span class="number">7</span>) <span class="built_in">printf</span>(<span class="string">"(Rock breaks scissors).\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"(Scissors cut paper).\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="问题-D-平方和"><a href="#问题-D-平方和" class="headerlink" title="问题 D: 平方和"></a>问题 D: 平方和</h1><blockquote><p>给定 $a1,a2,a3,a4,b1,b2,b3,b4$，输出 $c1,c2,c3,c4$，使得 $c1^2+c2^2+c3^2+c4^2=(a1^2+a2^2+a3^2+a4^2)(b1^2+b2^2+b3^2+b4^2)$  </p></blockquote><p><a href="https://zh.wikipedia.org/wiki/%E5%9B%9B%E5%B9%B3%E6%96%B9%E5%92%8C%E5%AE%9A%E7%90%86" target="_blank" rel="noopener">四平方和定理</a></p><p>$(a^2 + b^2 + c^2 + d^2)(x^2 + y^2 + z^2 + w^2) = $<br>$(ax + by + cz + dw)^2 + (ay - bx + cw - dz)^2 + (az - bw - cx + dy)^2 + (aw + bz - cy - dx)^2$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> n, a, b, c, d, x, y, z, w;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n); n; n--) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d%d%d%d%d%d"</span>, &amp;a, &amp;b, &amp;c, &amp;d, &amp;x, &amp;y, &amp;z, &amp;w);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d %d %d\n"</span>, a*x+b*y+c*z+d*w, a*y-b*x+c*w-d*z, a*z-b*w-c*x+d*y, a*w+b*z-c*y-d*x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="问题-E-组合数计算"><a href="#问题-E-组合数计算" class="headerlink" title="问题 E: 组合数计算"></a>问题 E: 组合数计算</h1><blockquote><p>计算 $C(n,r) = \frac{n!}{r!(n-r)!}$。请首先使用递归实现方法 long long factorial(int n) 计算阶乘 n!；然后借助 factorial 方法实现问题所求（我们将检查程序代码）。</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">factorial</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!x) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> x * factorial(x<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, factorial(n) / factorial(m) / factorial(n-m));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="问题-F-Constructing-Roads"><a href="#问题-F-Constructing-Roads" class="headerlink" title="问题 F: Constructing Roads"></a>问题 F: Constructing Roads</h1><blockquote><p>有n个点，两点间距离给定，有一些点对之间已经连有边。求最段的建边长度，是n个点相互连通。</p></blockquote><p><a href="https://zh.wikipedia.org/wiki/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91" target="_blank" rel="noopener">最小生成树</a>：Prim 算法和 Kruskal 算法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">105</span>;</span><br><span class="line"><span class="keyword">int</span> n, Q, tota, ans, g[N][N], fa[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> x, y, v;</span><br><span class="line">&#125;a[N*N&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span> <span class="params">(<span class="keyword">const</span> node &amp;a, <span class="keyword">const</span> node &amp;b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.v &lt; b.v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">father</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> fa[x]==x ? x : fa[x]=father(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">Union</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> f1 = father(x), f2 = father(y);</span><br><span class="line"><span class="keyword">if</span>(f1 != f2) fa[f1] = f2;</span><br><span class="line"><span class="keyword">return</span> f1 != f2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) fa[i] = i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>, x; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line"><span class="keyword">if</span>(i &lt; j) a[++tota].x = i, a[tota].y = j, a[tota].v = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">std</span>::sort(a+<span class="number">1</span>, a+tota+<span class="number">1</span>, cmp);</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;Q);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>, x, y; i &lt;= Q; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;x, &amp;y);</span><br><span class="line">Union(x, y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= tota; i++)</span><br><span class="line"><span class="keyword">if</span>(Union(a[i].x, a[i].y)) ans += a[i].v;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>干部名单公示</title>
      <link href="/17.09.24/"/>
      <url>/17.09.24/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th style="text-align:center">姓名</th><th style="text-align:center">职务</th><th style="text-align:center">手机号码</th><th style="text-align:center">邮箱</th><th style="text-align:center">宿舍号码</th></tr></thead><tbody><tr><td style="text-align:center">裴一凡</td><td style="text-align:center">班长兼团支部副书记</td><td style="text-align:center">15695296716</td><td style="text-align:center"><a href="mailto:peifancy@gmail.com" target="_blank" rel="noopener">peifancy@gmail.com</a></td><td style="text-align:center">4B446</td></tr><tr><td style="text-align:center">郑奘巍</td><td style="text-align:center">团支部书记</td><td style="text-align:center">18852000199</td><td style="text-align:center"><a href="mailto:zhengzangw@163.com" target="_blank" rel="noopener">zhengzangw@163.com</a></td><td style="text-align:center">5A611</td></tr><tr><td style="text-align:center">吕云哲</td><td style="text-align:center">宣传委员</td><td style="text-align:center">18852005198</td><td style="text-align:center"><a href="mailto:1762069487@qq.com" target="_blank" rel="noopener">1762069487@qq.com</a></td><td style="text-align:center">5B635</td></tr><tr><td style="text-align:center">姜勇刚</td><td style="text-align:center">学习委员</td><td style="text-align:center">18170880522</td><td style="text-align:center"><a href="mailto:349470259@qq.com" target="_blank" rel="noopener">349470259@qq.com</a></td><td style="text-align:center">3A231</td></tr><tr><td style="text-align:center">殷兆恒</td><td style="text-align:center">组织委员</td><td style="text-align:center">18852003899</td><td style="text-align:center"><a href="mailto:812719483@qq.com" target="_blank" rel="noopener">812719483@qq.com</a></td><td style="text-align:center">5A606</td></tr><tr><td style="text-align:center">陶绍诚</td><td style="text-align:center">文体委员</td><td style="text-align:center">18852002722</td><td style="text-align:center"><a href="mailto:912981655@qq.com" target="_blank" rel="noopener">912981655@qq.com</a></td><td style="text-align:center">5B548</td></tr></tbody></table><h1 id="附：计算机类2017级班级干部管理条例"><a href="#附：计算机类2017级班级干部管理条例" class="headerlink" title="附：计算机类2017级班级干部管理条例"></a>附：计算机类2017级班级干部管理条例</h1><h1 id="一、主要职权"><a href="#一、主要职权" class="headerlink" title="一、主要职权"></a>一、主要职权</h1><p>1、自主开展班级活动（如：班会、团组织生活、出游、文体活动等）<br>2、负责班级的日常工作，配合辅导员、班主任的工作<br>3、向院系申请人力、物力和财力的支持<br>4、维护班级纪律及宿舍秩序  </p><h2 id="具体职权"><a href="#具体职权" class="headerlink" title="具体职权"></a>具体职权</h2><p>1、班长（6名）：全权处理班级事务，协助配合辅导员、班主任的工作<br>2、学习委员（6名）：订购教材、四六级考试、学术讲座、选课等事务，协助院系团委学生会学科部工作<br>3、文体委员（6名）：负责学校、院系运动会（球赛）以及文艺活动（晚会）等，协助院系团委学生会文体部的工作<br>4、团支书（6名）：全权处理班级团支部的党团工作，协助系团委、团总支书记的工作<br>5、组织委员（6名）：协助团支书开展班级团组织生活，学校和院系团内推优评优，团代会以及班级财务工作<br>6、宣传委员（6名）：协助班长和团支书开展工作，做好班级活动的记录<br>　<br>备注：每年度会有优秀团支部和优秀班级的评比工作，届时希望各位班团干部统筹分工，做好协调，共同完成这一任务（平时就要做好活动的文字、图片、视频、录像等资料收集）。  </p><h1 id="二、监督与建议机制"><a href="#二、监督与建议机制" class="headerlink" title="二、监督与建议机制"></a>二、监督与建议机制</h1><p>班级干部对班长个人的意见以及对班级决策的建议可在平时向班长提出或在例会上提出，也可以直接向辅导员提出，并要求班长作出解释。然后由辅导员于所有班级干部商定并公布处理意见（重要处理意见由全体干部表决产生），不允许班级干部对班长“不建议――不执行”<br>　<br>班长对班级干部有监督和建议的职责，但不得直接干涉或不执行班级的既定决议<br>　<br>班级所有同学对班级干部有监督和建议的职责  </p><h1 id="三、例会制度"><a href="#三、例会制度" class="headerlink" title="三、例会制度"></a>三、例会制度</h1><h2 id="年级例会"><a href="#年级例会" class="headerlink" title="年级例会"></a>年级例会</h2><p>1、时间：每月一次，由辅导员商议决定<br>2、参加人员：班长、团支书、各班班委等，视需要调整<br>3、内容：各班班级工作总结，下一阶段的规划<br>4、会议记录：每次开会的记录统一记录在年级会议记录本上  </p><h2 id="班级例会"><a href="#班级例会" class="headerlink" title="班级例会"></a>班级例会</h2><p>由各班长和团支书主持召开，具体时间、地点自定，班级干部全部参加，党员也有列席参与，具有监督权，各班的班级会议同样须有各班的会议记录本  </p><h2 id="临时会议"><a href="#临时会议" class="headerlink" title="临时会议"></a>临时会议</h2><p>由辅导员或由班长/团支书临时召集召开  </p><h1 id="四、其他"><a href="#四、其他" class="headerlink" title="四、其他"></a>四、其他</h1><p>1、班级开展的活动需要有书面计划，形成“计划――申请――批准――运作――总结”机制。班级活动的材料统一交由班级宣传委员保管。（文字、图片、视频、录像等资料）<br>2、班级活动前的书面计划中需详细注明预计的活动时间和开支<br>3、班级事务由班长/团支书负责，如有失误，应在班委内部做出检讨并及时改正<br>4、财务公开机制：班级的财务记录每月初公示一天<br>5、干部的退补机制：退出需向辅导员递交书面申请；班级内部竞选表决产生<br>6、欢迎对此纲要的不当之处提出建议  </p><h1 id="附：日常行为考评方案"><a href="#附：日常行为考评方案" class="headerlink" title="附：日常行为考评方案"></a>附：日常行为考评方案</h1><h2 id="加分项"><a href="#加分项" class="headerlink" title="加分项"></a>加分项</h2><p>1、积极组织、参与系内外校内外各种文体活动（要求全员参加的除外）和竞赛，为本系、本校争光<br>2、积极参与各种志愿活动，为集体、社会献爱心<br>3、好人好事  </p><h2 id="扣分项"><a href="#扣分项" class="headerlink" title="扣分项"></a>扣分项</h2><p>1、做有损祖国荣誉、民族尊严、学校形象的事<br>2、无故不参加集体活动<br>3、上课迟到、早退、无故旷课<br>4、考试作弊（学校还会另有处理意见）<br>5、不遵守学校各项管理规定，打架、赌博、破坏公物、沉迷游戏、夜不归宿、留宿校外人员等……  </p>]]></content>
      
      
      
        <tags>
            
            <tag> 信息 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LaTeX使用说明</title>
      <link href="/17.09.20/"/>
      <url>/17.09.20/</url>
      
        <content type="html"><![CDATA[<h1 id="LaTeX介绍及教程"><a href="#LaTeX介绍及教程" class="headerlink" title="LaTeX介绍及教程"></a>LaTeX介绍及教程</h1><p>1、<a href="https://www.latex-project.org" target="_blank" rel="noopener">LaTeX官网</a><br>2、<a href="https://zh.wikibooks.org/zh-cn/LaTeX" target="_blank" rel="noopener">LaTeX / Wikibooks</a><br>3、<a href="https://liam0205.me/2014/09/08/latex-introduction" target="_blank" rel="noopener">一份其实很短的 LaTeX 入门文档</a>  </p><h1 id="魏老师的推荐"><a href="#魏老师的推荐" class="headerlink" title="魏老师的推荐"></a>魏老师的推荐</h1><p>1、<a href="/attachment/hw-latex-template-new.zip">LaTeX模板下载</a>&amp;<a href="https://www.sharelatex.com/project/59c28b3df4fa18367c0ddd11" target="_blank" rel="noopener">在线版模板</a><br>经测试，写字板打开时，中文显示出现乱码问题。所以，请用专用的 TeX 编辑工具。如果使用 Vim，请配置编码选项 (set fileencodings=utf-8,gb2312,gb18030,gbk,ucs-bom,cp936,latin1)，不用的可忽略。<br>　<br>插播一条信息：稍作修改，在 hw.tex 中添加了注释（主要关于 xelatex）。<br>　<br>如果要用latex写伪代码，可选择使用<a href="https://tex.stackexchange.com/q/229355/23098" target="_blank" rel="noopener">这些packages</a>。我一般使用algorithmicx。<br>　<br>参考资料，给出引用就可以，比如是什么书，什么网址，什么论文，谁写的，等等概要信息。必要的代码都可以放到作业文档里。<br>　<br>2、编辑器推荐：<br>（1）推荐一个在线LaTeX编辑器（考验学校网速的时候到了）：<a href="https://cn.sharelatex.com/" target="_blank" rel="noopener">ShareLaTeX</a><br>（2）windows系统：<a href="https://www.tug.org/texlive/acquire.html" target="_blank" rel="noopener">texlive 2017</a> 在紫荆上可以下载，安装自带 WinEdt 编辑器。<br>（3）Ubuntu 系统：推荐使用 vim-latex （也叫 latexsuite）<br>（4）<a href="https://github.com/scottkosty/install-tl-ubuntu" target="_blank" rel="noopener">Ubuntu 系统安装 texlive</a>   （一键安装，但可能耗时较长，睡前执行，一觉醒来就可以用了。）<br>（5）<a href="https://tex.stackexchange.com/questions/339/latex-editors-ides" target="_blank" rel="noopener">其他编辑器</a>  </p><h1 id="作业相关"><a href="#作业相关" class="headerlink" title="作业相关"></a>作业相关</h1><p>1、<a href="http://cslabcms.nju.edu.cn/problem_solving/index.php/2017%E7%BA%A7--%E5%AD%A6%E6%9C%9F%E5%AE%89%E6%8E%92_(%E7%AC%AC%E4%B8%80%E5%AD%A6%E6%9C%9F)" target="_blank" rel="noopener">作业内容</a><br>2、<a href="http://cslabcms.nju.edu.cn/" target="_blank" rel="noopener">作业提交平台</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新生见面会信息整理</title>
      <link href="/17.09.18/"/>
      <url>/17.09.18/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="http://bbs.nju.edu.cn/vd24543/blogdoc?userid=fzhong" target="_blank" rel="noopener">辅导员博客</a> 建议每天查看  </li><li><a href="http://cslabcms.nju.edu.cn" target="_blank" rel="noopener">作业平台cslabcms</a>  </li><li><a href="http://cslabcms.nju.edu.cn/problem_solving/index.php/2017%E7%BA%A7" target="_blank" rel="noopener">问题求解网站</a>  </li><li>C++网站：<br><a href="http://www.cplusplus.com/doc/tutorial/" target="_blank" rel="noopener">c++官网</a> 英文，提供在线编程<br><a href="http://www.mengma.com/class/course/72" target="_blank" rel="noopener">萌码</a> 中文，提供在线编程<br><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-096-introduction-to-c-january-iap-2011/index.htm" target="_blank" rel="noopener">MIT OpenCourseWare</a> 英文  </li><li>正常上班办公时间是周一到周五9:00-11:30和13:30-17:00。特例：教务处中午有人，辅导员周末也许有空。  </li><li>联系方式  </li></ol><table><thead><tr><th style="text-align:center">职务</th><th style="text-align:center">姓名</th><th style="text-align:center">办公地点</th><th style="text-align:center">办公电话</th><th style="text-align:center">手机号码</th><th style="text-align:center">电子邮箱</th><th style="text-align:center">QQ</th></tr></thead><tbody><tr><td style="text-align:center">辅导员</td><td style="text-align:center">傅忠</td><td style="text-align:center">周二四：计算机系楼212，周一三五：邵逸夫楼C区512</td><td style="text-align:center">02589680233</td><td style="text-align:center">18951679095</td><td style="text-align:center"><a href="mailto:fuzhong@nju.edu.cn" target="_blank" rel="noopener">fuzhong@nju.edu.cn</a></td><td style="text-align:center">417655900</td></tr><tr><td style="text-align:center">班主任</td><td style="text-align:center">路通</td><td style="text-align:center">计算机科学技术楼1007</td><td style="text-align:center">02589682398</td><td style="text-align:center">18913926002</td><td style="text-align:center"><a href="mailto:lutong@nju.edu.cn" target="_blank" rel="noopener">lutong@nju.edu.cn</a></td><td style="text-align:center">未知</td></tr><tr><td style="text-align:center">教务员</td><td style="text-align:center">苏贵珍</td><td style="text-align:center">计算机科学技术楼202</td><td style="text-align:center">02589684360</td><td style="text-align:center">未知</td><td style="text-align:center"><a href="mailto:sgz@nju.edu.cn" target="_blank" rel="noopener">sgz@nju.edu.cn</a></td><td style="text-align:center">未知</td></tr><tr><td style="text-align:center">教务员</td><td style="text-align:center">乔益华</td><td style="text-align:center">计算机科学技术楼202</td><td style="text-align:center">02589684360</td><td style="text-align:center">未知</td><td style="text-align:center"><a href="mailto:qiaoyh@nju.edu.cn" target="_blank" rel="noopener">qiaoyh@nju.edu.cn</a></td><td style="text-align:center">455329895</td></tr><tr><td style="text-align:center">问题求解</td><td style="text-align:center">陶先平</td><td style="text-align:center">计算机科学技术楼815</td><td style="text-align:center">02583593694</td><td style="text-align:center">13851681212</td><td style="text-align:center"><a href="mailto:txp@nju.edu.cn" target="_blank" rel="noopener">txp@nju.edu.cn</a></td><td style="text-align:center">2969653617</td></tr><tr><td style="text-align:center">问题求解</td><td style="text-align:center">马骏</td><td style="text-align:center">计算机科学技术楼819</td><td style="text-align:center">02589680922</td><td style="text-align:center">18951991733</td><td style="text-align:center"><a href="mailto:majun@nju.edu.cn" target="_blank" rel="noopener">majun@nju.edu.cn</a></td><td style="text-align:center">22070630</td></tr><tr><td style="text-align:center">问题求解</td><td style="text-align:center">魏恒峰</td><td style="text-align:center">计算机科学技术楼302</td><td style="text-align:center">未知</td><td style="text-align:center">13905194610</td><td style="text-align:center"><a href="mailto:hfwei@nju.edu.cn" target="_blank" rel="noopener">hfwei@nju.edu.cn</a></td><td style="text-align:center">245552163</td></tr></tbody></table><p>教务员职责：报到注册管理、学籍异动管理、学籍档案维护、学生选课维护、重修、补考、缓考审核管理、成绩单办理、各类考试报名通知、学业咨询、选课辅导、教学相关工作通知等。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 信息 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
